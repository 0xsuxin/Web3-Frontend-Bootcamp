{
	"id": "c771a2d21fde15c41aa16306d65071cf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFTExchange.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract NFTExchange is ReentrancyGuard {\n    struct Listing {\n        address seller;\n        address nftContract;\n        uint256 tokenId;\n        uint price;\n        bool isActive;\n    }\n\n    mapping(address => mapping(uint256 => Listing)) public listings;\n    IERC20 public paymentToken;\n\n    event NFTListed(\n        address indexed seller,\n        address indexed nftContract,\n        uint256 indexed token,\n        uint256 price\n    );\n\n    event NFTPurchased(\n        address indexed buyer,\n        address indexed nftContract,\n        uint indexed tokenId,\n        uint price\n    );\n\n    constructor(address _paymentToken) {\n        paymentToken = IERC20(_paymentToken);\n    }\n\n    function listNFT(address _nftContract, uint256 _tokenId, uint256 _price) external {\n        IERC721 nft = IERC721(_nftContract);\n        require(nft.ownerOf(_tokenId) == msg.sender, \"Not the owner of the NFT\");\n        require(nft.isApprovedForAll(msg.sender, address(this)), \"Contract not approved\");\n\n        listings[_nftContract][_tokenId] = Listing(\n            msg.sender,\n            _nftContract,\n            _tokenId,\n            _price,\n            true\n        );\n\n        emit NFTListed(msg.sender, _nftContract, _tokenId, _price);\n    }\n\n    function buyNFT(address _nftContract, uint256 _tokenId) external nonReentrant {\n        Listing storage listing = listings[_nftContract][_tokenId];\n        require(listing.isActive, \"NFT not listed for sale\");\n\n        IERC721 nft = IERC721(_nftContract);\n\n        require(\n            paymentToken.transferFrom(msg.sender, listing.seller, listing.price),\n            \"Payment failed\"\n        );\n\n        nft.safeTransferFrom(listing.seller, msg.sender, _tokenId);\n\n        listing.isActive = false;\n\n        emit NFTPurchased(msg.sender, _nftContract, _tokenId, listing.price);\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFTExchange.sol": {
				"NFTExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_paymentToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "token",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTPurchased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "listNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTExchange.sol\":238:2070  contract NFTExchange is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"NFTExchange.sol\":835:923  constructor(address _paymentToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"NFTExchange.sol\":902:915  _paymentToken */\n  dup1\n    /* \"NFTExchange.sol\":880:892  paymentToken */\n  0x02\n  0x00\n    /* \"NFTExchange.sol\":880:916  paymentToken = IERC20(_paymentToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTExchange.sol\":835:923  constructor(address _paymentToken) {... */\n  pop\n    /* \"NFTExchange.sol\":238:2070  contract NFTExchange is ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":932:1051   */\ntag_29:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_31\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"NFTExchange.sol\":238:2070  contract NFTExchange is ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTExchange.sol\":238:2070  contract NFTExchange is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x07df30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3013ce29\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa82ba76f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xad05f1b4\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NFTExchange.sol\":433:496  mapping(address => mapping(uint256 => Listing)) public listings */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTExchange.sol\":502:528  IERC20 public paymentToken */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTExchange.sol\":1484:2068  function buyNFT(address _nftContract, uint256 _tokenId) external nonReentrant {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"NFTExchange.sol\":929:1478  function listNFT(address _nftContract, uint256 _tokenId, uint256 _price) external {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"NFTExchange.sol\":433:496  mapping(address => mapping(uint256 => Listing)) public listings */\n    tag_10:\n      mstore(0x20, 0x01)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"NFTExchange.sol\":502:528  IERC20 public paymentToken */\n    tag_14:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTExchange.sol\":1484:2068  function buyNFT(address _nftContract, uint256 _tokenId) external nonReentrant {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_25\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_26\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_25:\n        /* \"NFTExchange.sol\":1572:1595  Listing storage listing */\n      0x00\n        /* \"NFTExchange.sol\":1598:1606  listings */\n      0x01\n        /* \"NFTExchange.sol\":1598:1620  listings[_nftContract] */\n      0x00\n        /* \"NFTExchange.sol\":1607:1619  _nftContract */\n      dup5\n        /* \"NFTExchange.sol\":1598:1620  listings[_nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTExchange.sol\":1598:1630  listings[_nftContract][_tokenId] */\n      0x00\n        /* \"NFTExchange.sol\":1621:1629  _tokenId */\n      dup4\n        /* \"NFTExchange.sol\":1598:1630  listings[_nftContract][_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTExchange.sol\":1572:1630  Listing storage listing = listings[_nftContract][_tokenId] */\n      swap1\n      pop\n        /* \"NFTExchange.sol\":1648:1655  listing */\n      dup1\n        /* \"NFTExchange.sol\":1648:1664  listing.isActive */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NFTExchange.sol\":1640:1692  require(listing.isActive, \"NFT not listed for sale\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"NFTExchange.sol\":1703:1714  IERC721 nft */\n      0x00\n        /* \"NFTExchange.sol\":1725:1737  _nftContract */\n      dup4\n        /* \"NFTExchange.sol\":1703:1738  IERC721 nft = IERC721(_nftContract) */\n      swap1\n      pop\n        /* \"NFTExchange.sol\":1770:1782  paymentToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTExchange.sol\":1770:1795  paymentToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"NFTExchange.sol\":1796:1806  msg.sender */\n      caller\n        /* \"NFTExchange.sol\":1808:1815  listing */\n      dup5\n        /* \"NFTExchange.sol\":1808:1822  listing.seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTExchange.sol\":1824:1831  listing */\n      dup6\n        /* \"NFTExchange.sol\":1824:1837  listing.price */\n      0x03\n      add\n      sload\n        /* \"NFTExchange.sol\":1770:1838  paymentToken.transferFrom(msg.sender, listing.seller, listing.price) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"NFTExchange.sol\":1749:1878  require(... */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"NFTExchange.sol\":1889:1892  nft */\n      dup1\n        /* \"NFTExchange.sol\":1889:1909  nft.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"NFTExchange.sol\":1910:1917  listing */\n      dup4\n        /* \"NFTExchange.sol\":1910:1924  listing.seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTExchange.sol\":1926:1936  msg.sender */\n      caller\n        /* \"NFTExchange.sol\":1938:1946  _tokenId */\n      dup7\n        /* \"NFTExchange.sol\":1889:1947  nft.safeTransferFrom(listing.seller, msg.sender, _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_40:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n        /* \"NFTExchange.sol\":1977:1982  false */\n      0x00\n        /* \"NFTExchange.sol\":1958:1965  listing */\n      dup3\n        /* \"NFTExchange.sol\":1958:1974  listing.isActive */\n      0x04\n      add\n      0x00\n        /* \"NFTExchange.sol\":1958:1982  listing.isActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTExchange.sol\":2037:2045  _tokenId */\n      dup3\n        /* \"NFTExchange.sol\":2023:2035  _nftContract */\n      dup5\n        /* \"NFTExchange.sol\":1998:2061  NFTPurchased(msg.sender, _nftContract, _tokenId, listing.price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTExchange.sol\":2011:2021  msg.sender */\n      caller\n        /* \"NFTExchange.sol\":1998:2061  NFTPurchased(msg.sender, _nftContract, _tokenId, listing.price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x84a34755616a04d6e547597ec5933d7ca8cf181bb354026be7e93e147edf0ab7\n        /* \"NFTExchange.sol\":2047:2054  listing */\n      dup6\n        /* \"NFTExchange.sol\":2047:2060  listing.price */\n      0x03\n      add\n      sload\n        /* \"NFTExchange.sol\":1998:2061  NFTPurchased(msg.sender, _nftContract, _tokenId, listing.price) */\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NFTExchange.sol\":1562:2068  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_46\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_47\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_46:\n        /* \"NFTExchange.sol\":1484:2068  function buyNFT(address _nftContract, uint256 _tokenId) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTExchange.sol\":929:1478  function listNFT(address _nftContract, uint256 _tokenId, uint256 _price) external {... */\n    tag_23:\n        /* \"NFTExchange.sol\":1021:1032  IERC721 nft */\n      0x00\n        /* \"NFTExchange.sol\":1043:1055  _nftContract */\n      dup4\n        /* \"NFTExchange.sol\":1021:1056  IERC721 nft = IERC721(_nftContract) */\n      swap1\n      pop\n        /* \"NFTExchange.sol\":1099:1109  msg.sender */\n      caller\n        /* \"NFTExchange.sol\":1074:1109  nft.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTExchange.sol\":1074:1077  nft */\n      dup2\n        /* \"NFTExchange.sol\":1074:1085  nft.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"NFTExchange.sol\":1086:1094  _tokenId */\n      dup6\n        /* \"NFTExchange.sol\":1074:1095  nft.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_49:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"NFTExchange.sol\":1074:1109  nft.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTExchange.sol\":1066:1138  require(nft.ownerOf(_tokenId) == msg.sender, \"Not the owner of the NFT\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"NFTExchange.sol\":1156:1159  nft */\n      dup1\n        /* \"NFTExchange.sol\":1156:1176  nft.isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"NFTExchange.sol\":1177:1187  msg.sender */\n      caller\n        /* \"NFTExchange.sol\":1197:1201  this */\n      address\n        /* \"NFTExchange.sol\":1156:1203  nft.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"NFTExchange.sol\":1148:1229  require(nft.isApprovedForAll(msg.sender, address(this)), \"Contract not approved\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"NFTExchange.sol\":1275:1402  Listing(... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"NFTExchange.sol\":1296:1306  msg.sender */\n      caller\n        /* \"NFTExchange.sol\":1275:1402  Listing(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NFTExchange.sol\":1320:1332  _nftContract */\n      dup6\n        /* \"NFTExchange.sol\":1275:1402  Listing(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NFTExchange.sol\":1346:1354  _tokenId */\n      dup5\n        /* \"NFTExchange.sol\":1275:1402  Listing(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NFTExchange.sol\":1368:1374  _price */\n      dup4\n        /* \"NFTExchange.sol\":1275:1402  Listing(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NFTExchange.sol\":1388:1392  true */\n      0x01\n        /* \"NFTExchange.sol\":1275:1402  Listing(... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"NFTExchange.sol\":1240:1248  listings */\n      0x01\n        /* \"NFTExchange.sol\":1240:1262  listings[_nftContract] */\n      0x00\n        /* \"NFTExchange.sol\":1249:1261  _nftContract */\n      dup7\n        /* \"NFTExchange.sol\":1240:1262  listings[_nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTExchange.sol\":1240:1272  listings[_nftContract][_tokenId] */\n      0x00\n        /* \"NFTExchange.sol\":1263:1271  _tokenId */\n      dup6\n        /* \"NFTExchange.sol\":1240:1272  listings[_nftContract][_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTExchange.sol\":1240:1402  listings[_nftContract][_tokenId] = Listing(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"NFTExchange.sol\":1454:1462  _tokenId */\n      dup3\n        /* \"NFTExchange.sol\":1440:1452  _nftContract */\n      dup5\n        /* \"NFTExchange.sol\":1418:1471  NFTListed(msg.sender, _nftContract, _tokenId, _price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTExchange.sol\":1428:1438  msg.sender */\n      caller\n        /* \"NFTExchange.sol\":1418:1471  NFTListed(msg.sender, _nftContract, _tokenId, _price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbeab3a2bb824b124a8a1eb465eec003338d61b414db132d37e9b3a984fdcf010\n        /* \"NFTExchange.sol\":1464:1470  _price */\n      dup6\n        /* \"NFTExchange.sol\":1418:1471  NFTListed(msg.sender, _nftContract, _tokenId, _price) */\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NFTExchange.sol\":1011:1478  {... */\n      pop\n        /* \"NFTExchange.sol\":929:1478  function listNFT(address _nftContract, uint256 _tokenId, uint256 _price) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_72:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_74:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_75:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_110\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_74\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_76:\n        /* \"#utility.yul\":641:665   */\n      tag_112\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_75\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_113:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_77:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_115\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_76\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_78:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_79:\n        /* \"#utility.yul\":997:1021   */\n      tag_118\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_78\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_119:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_80:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_121\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_79\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_9:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_124\n      tag_72\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1290:1409   */\n    tag_123:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_125\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_77\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_126\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_80\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_81:\n        /* \"#utility.yul\":1764:1788   */\n      tag_128\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_75\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:1919   */\n    tag_82:\n        /* \"#utility.yul\":1888:1912   */\n      tag_130\n        /* \"#utility.yul\":1906:1911   */\n      dup2\n        /* \"#utility.yul\":1888:1912   */\n      tag_78\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1883:1886   */\n      dup3\n        /* \"#utility.yul\":1876:1913   */\n      mstore\n        /* \"#utility.yul\":1801:1919   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1925:2015   */\n    tag_83:\n        /* \"#utility.yul\":1959:1966   */\n      0x00\n        /* \"#utility.yul\":2002:2007   */\n      dup2\n        /* \"#utility.yul\":1995:2008   */\n      iszero\n        /* \"#utility.yul\":1988:2009   */\n      iszero\n        /* \"#utility.yul\":1977:2009   */\n      swap1\n      pop\n        /* \"#utility.yul\":1925:2015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2021:2130   */\n    tag_84:\n        /* \"#utility.yul\":2102:2123   */\n      tag_133\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2102:2123   */\n      tag_83\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2097:2100   */\n      dup3\n        /* \"#utility.yul\":2090:2124   */\n      mstore\n        /* \"#utility.yul\":2021:2130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2788   */\n    tag_12:\n        /* \"#utility.yul\":2335:2339   */\n      0x00\n        /* \"#utility.yul\":2373:2376   */\n      0xa0\n        /* \"#utility.yul\":2362:2371   */\n      dup3\n        /* \"#utility.yul\":2358:2377   */\n      add\n        /* \"#utility.yul\":2350:2377   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2458   */\n      tag_135\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2444:2453   */\n      dup4\n        /* \"#utility.yul\":2440:2457   */\n      add\n        /* \"#utility.yul\":2431:2437   */\n      dup9\n        /* \"#utility.yul\":2387:2458   */\n      tag_81\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2468:2540   */\n      tag_136\n        /* \"#utility.yul\":2536:2538   */\n      0x20\n        /* \"#utility.yul\":2525:2534   */\n      dup4\n        /* \"#utility.yul\":2521:2539   */\n      add\n        /* \"#utility.yul\":2512:2518   */\n      dup8\n        /* \"#utility.yul\":2468:2540   */\n      tag_81\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2550:2622   */\n      tag_137\n        /* \"#utility.yul\":2618:2620   */\n      0x40\n        /* \"#utility.yul\":2607:2616   */\n      dup4\n        /* \"#utility.yul\":2603:2621   */\n      add\n        /* \"#utility.yul\":2594:2600   */\n      dup7\n        /* \"#utility.yul\":2550:2622   */\n      tag_82\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2632:2704   */\n      tag_138\n        /* \"#utility.yul\":2700:2702   */\n      0x60\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup6\n        /* \"#utility.yul\":2632:2704   */\n      tag_82\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2714:2781   */\n      tag_139\n        /* \"#utility.yul\":2776:2779   */\n      0x80\n        /* \"#utility.yul\":2765:2774   */\n      dup4\n        /* \"#utility.yul\":2761:2780   */\n      add\n        /* \"#utility.yul\":2752:2758   */\n      dup5\n        /* \"#utility.yul\":2714:2781   */\n      tag_84\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2136:2788   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2794:2854   */\n    tag_85:\n        /* \"#utility.yul\":2822:2825   */\n      0x00\n        /* \"#utility.yul\":2843:2848   */\n      dup2\n        /* \"#utility.yul\":2836:2848   */\n      swap1\n      pop\n        /* \"#utility.yul\":2794:2854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:3002   */\n    tag_86:\n        /* \"#utility.yul\":2910:2919   */\n      0x00\n        /* \"#utility.yul\":2943:2996   */\n      tag_142\n        /* \"#utility.yul\":2961:2995   */\n      tag_143\n        /* \"#utility.yul\":2970:2994   */\n      tag_144\n        /* \"#utility.yul\":2988:2993   */\n      dup5\n        /* \"#utility.yul\":2970:2994   */\n      tag_74\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2961:2995   */\n      tag_85\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2943:2996   */\n      tag_74\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2930:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3134   */\n    tag_87:\n        /* \"#utility.yul\":3058:3067   */\n      0x00\n        /* \"#utility.yul\":3091:3128   */\n      tag_146\n        /* \"#utility.yul\":3122:3127   */\n      dup3\n        /* \"#utility.yul\":3091:3128   */\n      tag_86\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3078:3128   */\n      swap1\n      pop\n        /* \"#utility.yul\":3008:3134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3140:3280   */\n    tag_88:\n        /* \"#utility.yul\":3204:3213   */\n      0x00\n        /* \"#utility.yul\":3237:3274   */\n      tag_148\n        /* \"#utility.yul\":3268:3273   */\n      dup3\n        /* \"#utility.yul\":3237:3274   */\n      tag_87\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3224:3274   */\n      swap1\n      pop\n        /* \"#utility.yul\":3140:3280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3445   */\n    tag_89:\n        /* \"#utility.yul\":3387:3438   */\n      tag_150\n        /* \"#utility.yul\":3432:3437   */\n      dup2\n        /* \"#utility.yul\":3387:3438   */\n      tag_88\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3382:3385   */\n      dup3\n        /* \"#utility.yul\":3375:3439   */\n      mstore\n        /* \"#utility.yul\":3286:3445   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3451:3701   */\n    tag_16:\n        /* \"#utility.yul\":3558:3562   */\n      0x00\n        /* \"#utility.yul\":3596:3598   */\n      0x20\n        /* \"#utility.yul\":3585:3594   */\n      dup3\n        /* \"#utility.yul\":3581:3599   */\n      add\n        /* \"#utility.yul\":3573:3599   */\n      swap1\n      pop\n        /* \"#utility.yul\":3609:3694   */\n      tag_152\n        /* \"#utility.yul\":3691:3692   */\n      0x00\n        /* \"#utility.yul\":3680:3689   */\n      dup4\n        /* \"#utility.yul\":3676:3693   */\n      add\n        /* \"#utility.yul\":3667:3673   */\n      dup5\n        /* \"#utility.yul\":3609:3694   */\n      tag_89\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3451:3701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3707:4326   */\n    tag_22:\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3792:3798   */\n      dup1\n        /* \"#utility.yul\":3800:3806   */\n      0x00\n        /* \"#utility.yul\":3849:3851   */\n      0x60\n        /* \"#utility.yul\":3837:3846   */\n      dup5\n        /* \"#utility.yul\":3828:3835   */\n      dup7\n        /* \"#utility.yul\":3824:3847   */\n      sub\n        /* \"#utility.yul\":3820:3852   */\n      slt\n        /* \"#utility.yul\":3817:3936   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":3855:3934   */\n      tag_155\n      tag_72\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3817:3936   */\n    tag_154:\n        /* \"#utility.yul\":3975:3976   */\n      0x00\n        /* \"#utility.yul\":4000:4053   */\n      tag_156\n        /* \"#utility.yul\":4045:4052   */\n      dup7\n        /* \"#utility.yul\":4036:4042   */\n      dup3\n        /* \"#utility.yul\":4025:4034   */\n      dup8\n        /* \"#utility.yul\":4021:4043   */\n      add\n        /* \"#utility.yul\":4000:4053   */\n      tag_77\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3990:4053   */\n      swap4\n      pop\n        /* \"#utility.yul\":3946:4063   */\n      pop\n        /* \"#utility.yul\":4102:4104   */\n      0x20\n        /* \"#utility.yul\":4128:4181   */\n      tag_157\n        /* \"#utility.yul\":4173:4180   */\n      dup7\n        /* \"#utility.yul\":4164:4170   */\n      dup3\n        /* \"#utility.yul\":4153:4162   */\n      dup8\n        /* \"#utility.yul\":4149:4171   */\n      add\n        /* \"#utility.yul\":4128:4181   */\n      tag_80\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4118:4181   */\n      swap3\n      pop\n        /* \"#utility.yul\":4073:4191   */\n      pop\n        /* \"#utility.yul\":4230:4232   */\n      0x40\n        /* \"#utility.yul\":4256:4309   */\n      tag_158\n        /* \"#utility.yul\":4301:4308   */\n      dup7\n        /* \"#utility.yul\":4292:4298   */\n      dup3\n        /* \"#utility.yul\":4281:4290   */\n      dup8\n        /* \"#utility.yul\":4277:4299   */\n      add\n        /* \"#utility.yul\":4256:4309   */\n      tag_80\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4246:4309   */\n      swap2\n      pop\n        /* \"#utility.yul\":4201:4319   */\n      pop\n        /* \"#utility.yul\":3707:4326   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4332:4501   */\n    tag_90:\n        /* \"#utility.yul\":4416:4427   */\n      0x00\n        /* \"#utility.yul\":4450:4456   */\n      dup3\n        /* \"#utility.yul\":4445:4448   */\n      dup3\n        /* \"#utility.yul\":4438:4457   */\n      mstore\n        /* \"#utility.yul\":4490:4494   */\n      0x20\n        /* \"#utility.yul\":4485:4488   */\n      dup3\n        /* \"#utility.yul\":4481:4495   */\n      add\n        /* \"#utility.yul\":4466:4495   */\n      swap1\n      pop\n        /* \"#utility.yul\":4332:4501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4507:4680   */\n    tag_91:\n        /* \"#utility.yul\":4647:4672   */\n      0x4e4654206e6f74206c697374656420666f722073616c65000000000000000000\n        /* \"#utility.yul\":4643:4644   */\n      0x00\n        /* \"#utility.yul\":4635:4641   */\n      dup3\n        /* \"#utility.yul\":4631:4645   */\n      add\n        /* \"#utility.yul\":4624:4673   */\n      mstore\n        /* \"#utility.yul\":4507:4680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4686:5052   */\n    tag_92:\n        /* \"#utility.yul\":4828:4831   */\n      0x00\n        /* \"#utility.yul\":4849:4916   */\n      tag_162\n        /* \"#utility.yul\":4913:4915   */\n      0x17\n        /* \"#utility.yul\":4908:4911   */\n      dup4\n        /* \"#utility.yul\":4849:4916   */\n      tag_90\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4842:4916   */\n      swap2\n      pop\n        /* \"#utility.yul\":4925:5018   */\n      tag_163\n        /* \"#utility.yul\":5014:5017   */\n      dup3\n        /* \"#utility.yul\":4925:5018   */\n      tag_91\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5043:5045   */\n      0x20\n        /* \"#utility.yul\":5038:5041   */\n      dup3\n        /* \"#utility.yul\":5034:5046   */\n      add\n        /* \"#utility.yul\":5027:5046   */\n      swap1\n      pop\n        /* \"#utility.yul\":4686:5052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5058:5477   */\n    tag_30:\n        /* \"#utility.yul\":5224:5228   */\n      0x00\n        /* \"#utility.yul\":5262:5264   */\n      0x20\n        /* \"#utility.yul\":5251:5260   */\n      dup3\n        /* \"#utility.yul\":5247:5265   */\n      add\n        /* \"#utility.yul\":5239:5265   */\n      swap1\n      pop\n        /* \"#utility.yul\":5311:5320   */\n      dup2\n        /* \"#utility.yul\":5305:5309   */\n      dup2\n        /* \"#utility.yul\":5301:5321   */\n      sub\n        /* \"#utility.yul\":5297:5298   */\n      0x00\n        /* \"#utility.yul\":5286:5295   */\n      dup4\n        /* \"#utility.yul\":5282:5299   */\n      add\n        /* \"#utility.yul\":5275:5322   */\n      mstore\n        /* \"#utility.yul\":5339:5470   */\n      tag_165\n        /* \"#utility.yul\":5465:5469   */\n      dup2\n        /* \"#utility.yul\":5339:5470   */\n      tag_92\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5331:5470   */\n      swap1\n      pop\n        /* \"#utility.yul\":5058:5477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5483:5925   */\n    tag_32:\n        /* \"#utility.yul\":5632:5636   */\n      0x00\n        /* \"#utility.yul\":5670:5672   */\n      0x60\n        /* \"#utility.yul\":5659:5668   */\n      dup3\n        /* \"#utility.yul\":5655:5673   */\n      add\n        /* \"#utility.yul\":5647:5673   */\n      swap1\n      pop\n        /* \"#utility.yul\":5683:5754   */\n      tag_167\n        /* \"#utility.yul\":5751:5752   */\n      0x00\n        /* \"#utility.yul\":5740:5749   */\n      dup4\n        /* \"#utility.yul\":5736:5753   */\n      add\n        /* \"#utility.yul\":5727:5733   */\n      dup7\n        /* \"#utility.yul\":5683:5754   */\n      tag_81\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5764:5836   */\n      tag_168\n        /* \"#utility.yul\":5832:5834   */\n      0x20\n        /* \"#utility.yul\":5821:5830   */\n      dup4\n        /* \"#utility.yul\":5817:5835   */\n      add\n        /* \"#utility.yul\":5808:5814   */\n      dup6\n        /* \"#utility.yul\":5764:5836   */\n      tag_81\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5846:5918   */\n      tag_169\n        /* \"#utility.yul\":5914:5916   */\n      0x40\n        /* \"#utility.yul\":5903:5912   */\n      dup4\n        /* \"#utility.yul\":5899:5917   */\n      add\n        /* \"#utility.yul\":5890:5896   */\n      dup5\n        /* \"#utility.yul\":5846:5918   */\n      tag_82\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5483:5925   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5931:6047   */\n    tag_93:\n        /* \"#utility.yul\":6001:6022   */\n      tag_171\n        /* \"#utility.yul\":6016:6021   */\n      dup2\n        /* \"#utility.yul\":6001:6022   */\n      tag_83\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5994:5999   */\n      dup2\n        /* \"#utility.yul\":5991:6023   */\n      eq\n        /* \"#utility.yul\":5981:6041   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":6037:6038   */\n      0x00\n        /* \"#utility.yul\":6034:6035   */\n      dup1\n        /* \"#utility.yul\":6027:6039   */\n      revert\n        /* \"#utility.yul\":5981:6041   */\n    tag_172:\n        /* \"#utility.yul\":5931:6047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6053:6190   */\n    tag_94:\n        /* \"#utility.yul\":6107:6112   */\n      0x00\n        /* \"#utility.yul\":6138:6144   */\n      dup2\n        /* \"#utility.yul\":6132:6145   */\n      mload\n        /* \"#utility.yul\":6123:6145   */\n      swap1\n      pop\n        /* \"#utility.yul\":6154:6184   */\n      tag_174\n        /* \"#utility.yul\":6178:6183   */\n      dup2\n        /* \"#utility.yul\":6154:6184   */\n      tag_93\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6053:6190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6196:6541   */\n    tag_36:\n        /* \"#utility.yul\":6263:6269   */\n      0x00\n        /* \"#utility.yul\":6312:6314   */\n      0x20\n        /* \"#utility.yul\":6300:6309   */\n      dup3\n        /* \"#utility.yul\":6291:6298   */\n      dup5\n        /* \"#utility.yul\":6287:6310   */\n      sub\n        /* \"#utility.yul\":6283:6315   */\n      slt\n        /* \"#utility.yul\":6280:6399   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":6318:6397   */\n      tag_177\n      tag_72\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6280:6399   */\n    tag_176:\n        /* \"#utility.yul\":6438:6439   */\n      0x00\n        /* \"#utility.yul\":6463:6524   */\n      tag_178\n        /* \"#utility.yul\":6516:6523   */\n      dup5\n        /* \"#utility.yul\":6507:6513   */\n      dup3\n        /* \"#utility.yul\":6496:6505   */\n      dup6\n        /* \"#utility.yul\":6492:6514   */\n      add\n        /* \"#utility.yul\":6463:6524   */\n      tag_94\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6453:6524   */\n      swap2\n      pop\n        /* \"#utility.yul\":6409:6534   */\n      pop\n        /* \"#utility.yul\":6196:6541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6547:6711   */\n    tag_95:\n        /* \"#utility.yul\":6687:6703   */\n      0x5061796d656e74206661696c6564000000000000000000000000000000000000\n        /* \"#utility.yul\":6683:6684   */\n      0x00\n        /* \"#utility.yul\":6675:6681   */\n      dup3\n        /* \"#utility.yul\":6671:6685   */\n      add\n        /* \"#utility.yul\":6664:6704   */\n      mstore\n        /* \"#utility.yul\":6547:6711   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6717:7083   */\n    tag_96:\n        /* \"#utility.yul\":6859:6862   */\n      0x00\n        /* \"#utility.yul\":6880:6947   */\n      tag_181\n        /* \"#utility.yul\":6944:6946   */\n      0x0e\n        /* \"#utility.yul\":6939:6942   */\n      dup4\n        /* \"#utility.yul\":6880:6947   */\n      tag_90\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6873:6947   */\n      swap2\n      pop\n        /* \"#utility.yul\":6956:7049   */\n      tag_182\n        /* \"#utility.yul\":7045:7048   */\n      dup3\n        /* \"#utility.yul\":6956:7049   */\n      tag_95\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":7074:7076   */\n      0x20\n        /* \"#utility.yul\":7069:7072   */\n      dup3\n        /* \"#utility.yul\":7065:7077   */\n      add\n        /* \"#utility.yul\":7058:7077   */\n      swap1\n      pop\n        /* \"#utility.yul\":6717:7083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7089:7508   */\n    tag_39:\n        /* \"#utility.yul\":7255:7259   */\n      0x00\n        /* \"#utility.yul\":7293:7295   */\n      0x20\n        /* \"#utility.yul\":7282:7291   */\n      dup3\n        /* \"#utility.yul\":7278:7296   */\n      add\n        /* \"#utility.yul\":7270:7296   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7351   */\n      dup2\n        /* \"#utility.yul\":7336:7340   */\n      dup2\n        /* \"#utility.yul\":7332:7352   */\n      sub\n        /* \"#utility.yul\":7328:7329   */\n      0x00\n        /* \"#utility.yul\":7317:7326   */\n      dup4\n        /* \"#utility.yul\":7313:7330   */\n      add\n        /* \"#utility.yul\":7306:7353   */\n      mstore\n        /* \"#utility.yul\":7370:7501   */\n      tag_184\n        /* \"#utility.yul\":7496:7500   */\n      dup2\n        /* \"#utility.yul\":7370:7501   */\n      tag_96\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":7362:7501   */\n      swap1\n      pop\n        /* \"#utility.yul\":7089:7508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7514:7736   */\n    tag_45:\n        /* \"#utility.yul\":7607:7611   */\n      0x00\n        /* \"#utility.yul\":7645:7647   */\n      0x20\n        /* \"#utility.yul\":7634:7643   */\n      dup3\n        /* \"#utility.yul\":7630:7648   */\n      add\n        /* \"#utility.yul\":7622:7648   */\n      swap1\n      pop\n        /* \"#utility.yul\":7658:7729   */\n      tag_186\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7715:7724   */\n      dup4\n        /* \"#utility.yul\":7711:7728   */\n      add\n        /* \"#utility.yul\":7702:7708   */\n      dup5\n        /* \"#utility.yul\":7658:7729   */\n      tag_82\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7514:7736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7742:7885   */\n    tag_97:\n        /* \"#utility.yul\":7799:7804   */\n      0x00\n        /* \"#utility.yul\":7830:7836   */\n      dup2\n        /* \"#utility.yul\":7824:7837   */\n      mload\n        /* \"#utility.yul\":7815:7837   */\n      swap1\n      pop\n        /* \"#utility.yul\":7846:7879   */\n      tag_188\n        /* \"#utility.yul\":7873:7878   */\n      dup2\n        /* \"#utility.yul\":7846:7879   */\n      tag_76\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":7742:7885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7891:8242   */\n    tag_53:\n        /* \"#utility.yul\":7961:7967   */\n      0x00\n        /* \"#utility.yul\":8010:8012   */\n      0x20\n        /* \"#utility.yul\":7998:8007   */\n      dup3\n        /* \"#utility.yul\":7989:7996   */\n      dup5\n        /* \"#utility.yul\":7985:8008   */\n      sub\n        /* \"#utility.yul\":7981:8013   */\n      slt\n        /* \"#utility.yul\":7978:8097   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":8016:8095   */\n      tag_191\n      tag_72\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7978:8097   */\n    tag_190:\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8161:8225   */\n      tag_192\n        /* \"#utility.yul\":8217:8224   */\n      dup5\n        /* \"#utility.yul\":8208:8214   */\n      dup3\n        /* \"#utility.yul\":8197:8206   */\n      dup6\n        /* \"#utility.yul\":8193:8215   */\n      add\n        /* \"#utility.yul\":8161:8225   */\n      tag_97\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":8151:8225   */\n      swap2\n      pop\n        /* \"#utility.yul\":8107:8235   */\n      pop\n        /* \"#utility.yul\":7891:8242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8248:8422   */\n    tag_98:\n        /* \"#utility.yul\":8388:8414   */\n      0x4e6f7420746865206f776e6572206f6620746865204e46540000000000000000\n        /* \"#utility.yul\":8384:8385   */\n      0x00\n        /* \"#utility.yul\":8376:8382   */\n      dup3\n        /* \"#utility.yul\":8372:8386   */\n      add\n        /* \"#utility.yul\":8365:8415   */\n      mstore\n        /* \"#utility.yul\":8248:8422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8428:8794   */\n    tag_99:\n        /* \"#utility.yul\":8570:8573   */\n      0x00\n        /* \"#utility.yul\":8591:8658   */\n      tag_195\n        /* \"#utility.yul\":8655:8657   */\n      0x18\n        /* \"#utility.yul\":8650:8653   */\n      dup4\n        /* \"#utility.yul\":8591:8658   */\n      tag_90\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":8584:8658   */\n      swap2\n      pop\n        /* \"#utility.yul\":8667:8760   */\n      tag_196\n        /* \"#utility.yul\":8756:8759   */\n      dup3\n        /* \"#utility.yul\":8667:8760   */\n      tag_98\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":8785:8787   */\n      0x20\n        /* \"#utility.yul\":8780:8783   */\n      dup3\n        /* \"#utility.yul\":8776:8788   */\n      add\n        /* \"#utility.yul\":8769:8788   */\n      swap1\n      pop\n        /* \"#utility.yul\":8428:8794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8800:9219   */\n    tag_56:\n        /* \"#utility.yul\":8966:8970   */\n      0x00\n        /* \"#utility.yul\":9004:9006   */\n      0x20\n        /* \"#utility.yul\":8993:9002   */\n      dup3\n        /* \"#utility.yul\":8989:9007   */\n      add\n        /* \"#utility.yul\":8981:9007   */\n      swap1\n      pop\n        /* \"#utility.yul\":9053:9062   */\n      dup2\n        /* \"#utility.yul\":9047:9051   */\n      dup2\n        /* \"#utility.yul\":9043:9063   */\n      sub\n        /* \"#utility.yul\":9039:9040   */\n      0x00\n        /* \"#utility.yul\":9028:9037   */\n      dup4\n        /* \"#utility.yul\":9024:9041   */\n      add\n        /* \"#utility.yul\":9017:9064   */\n      mstore\n        /* \"#utility.yul\":9081:9212   */\n      tag_198\n        /* \"#utility.yul\":9207:9211   */\n      dup2\n        /* \"#utility.yul\":9081:9212   */\n      tag_99\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":9073:9212   */\n      swap1\n      pop\n        /* \"#utility.yul\":8800:9219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9225:9557   */\n    tag_58:\n        /* \"#utility.yul\":9346:9350   */\n      0x00\n        /* \"#utility.yul\":9384:9386   */\n      0x40\n        /* \"#utility.yul\":9373:9382   */\n      dup3\n        /* \"#utility.yul\":9369:9387   */\n      add\n        /* \"#utility.yul\":9361:9387   */\n      swap1\n      pop\n        /* \"#utility.yul\":9397:9468   */\n      tag_200\n        /* \"#utility.yul\":9465:9466   */\n      0x00\n        /* \"#utility.yul\":9454:9463   */\n      dup4\n        /* \"#utility.yul\":9450:9467   */\n      add\n        /* \"#utility.yul\":9441:9447   */\n      dup6\n        /* \"#utility.yul\":9397:9468   */\n      tag_81\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":9478:9550   */\n      tag_201\n        /* \"#utility.yul\":9546:9548   */\n      0x20\n        /* \"#utility.yul\":9535:9544   */\n      dup4\n        /* \"#utility.yul\":9531:9549   */\n      add\n        /* \"#utility.yul\":9522:9528   */\n      dup5\n        /* \"#utility.yul\":9478:9550   */\n      tag_81\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":9225:9557   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9563:9734   */\n    tag_100:\n        /* \"#utility.yul\":9703:9726   */\n      0x436f6e7472616374206e6f7420617070726f7665640000000000000000000000\n        /* \"#utility.yul\":9699:9700   */\n      0x00\n        /* \"#utility.yul\":9691:9697   */\n      dup3\n        /* \"#utility.yul\":9687:9701   */\n      add\n        /* \"#utility.yul\":9680:9727   */\n      mstore\n        /* \"#utility.yul\":9563:9734   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9740:10106   */\n    tag_101:\n        /* \"#utility.yul\":9882:9885   */\n      0x00\n        /* \"#utility.yul\":9903:9970   */\n      tag_204\n        /* \"#utility.yul\":9967:9969   */\n      0x15\n        /* \"#utility.yul\":9962:9965   */\n      dup4\n        /* \"#utility.yul\":9903:9970   */\n      tag_90\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":9896:9970   */\n      swap2\n      pop\n        /* \"#utility.yul\":9979:10072   */\n      tag_205\n        /* \"#utility.yul\":10068:10071   */\n      dup3\n        /* \"#utility.yul\":9979:10072   */\n      tag_100\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":10097:10099   */\n      0x20\n        /* \"#utility.yul\":10092:10095   */\n      dup3\n        /* \"#utility.yul\":10088:10100   */\n      add\n        /* \"#utility.yul\":10081:10100   */\n      swap1\n      pop\n        /* \"#utility.yul\":9740:10106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10112:10531   */\n    tag_64:\n        /* \"#utility.yul\":10278:10282   */\n      0x00\n        /* \"#utility.yul\":10316:10318   */\n      0x20\n        /* \"#utility.yul\":10305:10314   */\n      dup3\n        /* \"#utility.yul\":10301:10319   */\n      add\n        /* \"#utility.yul\":10293:10319   */\n      swap1\n      pop\n        /* \"#utility.yul\":10365:10374   */\n      dup2\n        /* \"#utility.yul\":10359:10363   */\n      dup2\n        /* \"#utility.yul\":10355:10375   */\n      sub\n        /* \"#utility.yul\":10351:10352   */\n      0x00\n        /* \"#utility.yul\":10340:10349   */\n      dup4\n        /* \"#utility.yul\":10336:10353   */\n      add\n        /* \"#utility.yul\":10329:10376   */\n      mstore\n        /* \"#utility.yul\":10393:10524   */\n      tag_207\n        /* \"#utility.yul\":10519:10523   */\n      dup2\n        /* \"#utility.yul\":10393:10524   */\n      tag_101\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":10385:10524   */\n      swap1\n      pop\n        /* \"#utility.yul\":10112:10531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10537:10718   */\n    tag_102:\n        /* \"#utility.yul\":10677:10710   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10673:10674   */\n      0x00\n        /* \"#utility.yul\":10665:10671   */\n      dup3\n        /* \"#utility.yul\":10661:10675   */\n      add\n        /* \"#utility.yul\":10654:10711   */\n      mstore\n        /* \"#utility.yul\":10537:10718   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10724:11090   */\n    tag_103:\n        /* \"#utility.yul\":10866:10869   */\n      0x00\n        /* \"#utility.yul\":10887:10954   */\n      tag_210\n        /* \"#utility.yul\":10951:10953   */\n      0x1f\n        /* \"#utility.yul\":10946:10949   */\n      dup4\n        /* \"#utility.yul\":10887:10954   */\n      tag_90\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":10880:10954   */\n      swap2\n      pop\n        /* \"#utility.yul\":10963:11056   */\n      tag_211\n        /* \"#utility.yul\":11052:11055   */\n      dup3\n        /* \"#utility.yul\":10963:11056   */\n      tag_102\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":11081:11083   */\n      0x20\n        /* \"#utility.yul\":11076:11079   */\n      dup3\n        /* \"#utility.yul\":11072:11084   */\n      add\n        /* \"#utility.yul\":11065:11084   */\n      swap1\n      pop\n        /* \"#utility.yul\":10724:11090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11096:11515   */\n    tag_69:\n        /* \"#utility.yul\":11262:11266   */\n      0x00\n        /* \"#utility.yul\":11300:11302   */\n      0x20\n        /* \"#utility.yul\":11289:11298   */\n      dup3\n        /* \"#utility.yul\":11285:11303   */\n      add\n        /* \"#utility.yul\":11277:11303   */\n      swap1\n      pop\n        /* \"#utility.yul\":11349:11358   */\n      dup2\n        /* \"#utility.yul\":11343:11347   */\n      dup2\n        /* \"#utility.yul\":11339:11359   */\n      sub\n        /* \"#utility.yul\":11335:11336   */\n      0x00\n        /* \"#utility.yul\":11324:11333   */\n      dup4\n        /* \"#utility.yul\":11320:11337   */\n      add\n        /* \"#utility.yul\":11313:11360   */\n      mstore\n        /* \"#utility.yul\":11377:11508   */\n      tag_213\n        /* \"#utility.yul\":11503:11507   */\n      dup2\n        /* \"#utility.yul\":11377:11508   */\n      tag_103\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":11369:11508   */\n      swap1\n      pop\n        /* \"#utility.yul\":11096:11515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d12d0a474c4c63f05b7d3a5b114abdfd591e5fbf95cfaf5aa6e0047d3e09ae9764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:5",
										"nodeType": "YulBlock",
										"src": "0:1199:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610e9d380380610e9d833981810160405281019061003191906100dc565b60015f819055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610107565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100ab82610082565b9050919050565b6100bb816100a1565b81146100c5575f80fd5b50565b5f815190506100d6816100b2565b92915050565b5f602082840312156100f1576100f061007e565b5b5f6100fe848285016100c8565b91505092915050565b610d89806101145f395ff3fe608060405234801561000f575f80fd5b5060043610610049575f3560e01c806207df301461004d5780633013ce2914610081578063a82ba76f1461009f578063ad05f1b4146100bb575b5f80fd5b610067600480360381019061006291906108a7565b6100d7565b60405161007895949392919061091d565b60405180910390f35b61008961015e565b60405161009691906109c9565b60405180910390f35b6100b960048036038101906100b491906108a7565b610183565b005b6100d560048036038101906100d091906109e2565b610450565b005b6001602052815f5260405f20602052805f5260405f205f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015f9054906101000a900460ff16905085565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61018b6107c0565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806004015f9054906101000a900460ff1661022a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022190610a8c565b60405180910390fd5b5f83905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518463ffffffff1660e01b81526004016102b293929190610aaa565b6020604051808303815f875af11580156102ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102f29190610b09565b610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032890610b7e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166342842e0e835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633866040518463ffffffff1660e01b815260040161039093929190610aaa565b5f604051808303815f87803b1580156103a7575f80fd5b505af11580156103b9573d5f803e3d5ffd5b505050505f826004015f6101000a81548160ff021916908315150217905550828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84a34755616a04d6e547597ec5933d7ca8cf181bb354026be7e93e147edf0ab7856003015460405161043a9190610b9c565b60405180910390a4505061044c61080d565b5050565b5f8390503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016104a49190610b9c565b602060405180830381865afa1580156104bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e39190610bc9565b73ffffffffffffffffffffffffffffffffffffffff1614610539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053090610c3e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b8152600401610574929190610c5c565b602060405180830381865afa15801561058f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b39190610b09565b6105f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e990610ccd565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020016001151581525060015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8581526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015f6101000a81548160ff021916908315150217905550905050828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbeab3a2bb824b124a8a1eb465eec003338d61b414db132d37e9b3a984fdcf010856040516107b29190610b9c565b60405180910390a450505050565b60025f5403610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90610d35565b60405180910390fd5b60025f81905550565b60015f81905550565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108438261081a565b9050919050565b61085381610839565b811461085d575f80fd5b50565b5f8135905061086e8161084a565b92915050565b5f819050919050565b61088681610874565b8114610890575f80fd5b50565b5f813590506108a18161087d565b92915050565b5f80604083850312156108bd576108bc610816565b5b5f6108ca85828601610860565b92505060206108db85828601610893565b9150509250929050565b6108ee81610839565b82525050565b6108fd81610874565b82525050565b5f8115159050919050565b61091781610903565b82525050565b5f60a0820190506109305f8301886108e5565b61093d60208301876108e5565b61094a60408301866108f4565b61095760608301856108f4565b610964608083018461090e565b9695505050505050565b5f819050919050565b5f61099161098c6109878461081a565b61096e565b61081a565b9050919050565b5f6109a282610977565b9050919050565b5f6109b382610998565b9050919050565b6109c3816109a9565b82525050565b5f6020820190506109dc5f8301846109ba565b92915050565b5f805f606084860312156109f9576109f8610816565b5b5f610a0686828701610860565b9350506020610a1786828701610893565b9250506040610a2886828701610893565b9150509250925092565b5f82825260208201905092915050565b7f4e4654206e6f74206c697374656420666f722073616c650000000000000000005f82015250565b5f610a76601783610a32565b9150610a8182610a42565b602082019050919050565b5f6020820190508181035f830152610aa381610a6a565b9050919050565b5f606082019050610abd5f8301866108e5565b610aca60208301856108e5565b610ad760408301846108f4565b949350505050565b610ae881610903565b8114610af2575f80fd5b50565b5f81519050610b0381610adf565b92915050565b5f60208284031215610b1e57610b1d610816565b5b5f610b2b84828501610af5565b91505092915050565b7f5061796d656e74206661696c65640000000000000000000000000000000000005f82015250565b5f610b68600e83610a32565b9150610b7382610b34565b602082019050919050565b5f6020820190508181035f830152610b9581610b5c565b9050919050565b5f602082019050610baf5f8301846108f4565b92915050565b5f81519050610bc38161084a565b92915050565b5f60208284031215610bde57610bdd610816565b5b5f610beb84828501610bb5565b91505092915050565b7f4e6f7420746865206f776e6572206f6620746865204e465400000000000000005f82015250565b5f610c28601883610a32565b9150610c3382610bf4565b602082019050919050565b5f6020820190508181035f830152610c5581610c1c565b9050919050565b5f604082019050610c6f5f8301856108e5565b610c7c60208301846108e5565b9392505050565b7f436f6e7472616374206e6f7420617070726f76656400000000000000000000005f82015250565b5f610cb7601583610a32565b9150610cc282610c83565b602082019050919050565b5f6020820190508181035f830152610ce481610cab565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610d1f601f83610a32565b9150610d2a82610ceb565b602082019050919050565b5f6020820190508181035f830152610d4c81610d13565b905091905056fea2646970667358221220d12d0a474c4c63f05b7d3a5b114abdfd591e5fbf95cfaf5aa6e0047d3e09ae9764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE9D CODESIZE SUB DUP1 PUSH2 0xE9D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x107 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAB DUP3 PUSH2 0x82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB DUP2 PUSH2 0xA1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD6 DUP2 PUSH2 0xB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFE DUP5 DUP3 DUP6 ADD PUSH2 0xC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD89 DUP1 PUSH2 0x114 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x7DF30 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xAD05F1B4 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x7C0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x221 SWAP1 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP3 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x84A34755616A04D6E547597EC5933D7CA8CF181BB354026BE7E93E147EDF0AB7 DUP6 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x44C PUSH2 0x80D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP4 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x530 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP3 SWAP2 SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E9 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEAB3A2BB824B124A8A1EB465EEC003338D61B414DB132D37E9B3A984FDCF010 DUP6 PUSH1 0x40 MLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FB SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x843 DUP3 PUSH2 0x81A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x853 DUP2 PUSH2 0x839 JUMP JUMPDEST DUP2 EQ PUSH2 0x85D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86E DUP2 PUSH2 0x84A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x886 DUP2 PUSH2 0x874 JUMP JUMPDEST DUP2 EQ PUSH2 0x890 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A1 DUP2 PUSH2 0x87D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8BD JUMPI PUSH2 0x8BC PUSH2 0x816 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8CA DUP6 DUP3 DUP7 ADD PUSH2 0x860 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8DB DUP6 DUP3 DUP7 ADD PUSH2 0x893 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EE DUP2 PUSH2 0x839 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8FD DUP2 PUSH2 0x874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x917 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x930 PUSH0 DUP4 ADD DUP9 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x93D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x94A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x957 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x964 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x90E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x991 PUSH2 0x98C PUSH2 0x987 DUP5 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9A2 DUP3 PUSH2 0x977 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B3 DUP3 PUSH2 0x998 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x9A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DC PUSH0 DUP4 ADD DUP5 PUSH2 0x9BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x816 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA06 DUP7 DUP3 DUP8 ADD PUSH2 0x860 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA17 DUP7 DUP3 DUP8 ADD PUSH2 0x893 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA28 DUP7 DUP3 DUP8 ADD PUSH2 0x893 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E4654206E6F74206C697374656420666F722073616C65000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA76 PUSH1 0x17 DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xA81 DUP3 PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAA3 DUP2 PUSH2 0xA6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xABD PUSH0 DUP4 ADD DUP7 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0xACA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0xAD7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8F4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xAE8 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB03 DUP2 PUSH2 0xADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1E JUMPI PUSH2 0xB1D PUSH2 0x816 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB2B DUP5 DUP3 DUP6 ADD PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061796D656E74206661696C6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB68 PUSH1 0xE DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xB73 DUP3 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB95 DUP2 PUSH2 0xB5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAF PUSH0 DUP4 ADD DUP5 PUSH2 0x8F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC3 DUP2 PUSH2 0x84A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0x816 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBEB DUP5 DUP3 DUP6 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E6572206F6620746865204E46540000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC28 PUSH1 0x18 DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xC33 DUP3 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC55 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC6F PUSH0 DUP4 ADD DUP6 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0xC7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCB7 PUSH1 0x15 DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC2 DUP3 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE4 DUP2 PUSH2 0xCAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD1F PUSH1 0x1F DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2A DUP3 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD4C DUP2 PUSH2 0xD13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0x2D EXP SELFBALANCE 0x4C 0x4C PUSH4 0xF05B7D3A JUMPDEST GT BLOBBASEFEE 0xBD REVERT MSIZE 0x1E PUSH0 0xBF SWAP6 0xCF 0xAF GAS 0xA6 0xE0 DIV PUSH30 0x3E09AE9764736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "238:1832:4:-:0;;;835:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;902:13:4;880:12;;:36;;;;;;;;;;;;;;;;;;835:88;238:1832;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;238:1832:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_nonReentrantAfter_52": {
									"entryPoint": 2061,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 1984,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyNFT_465": {
									"entryPoint": 387,
									"id": 465,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@listNFT_395": {
									"entryPoint": 1104,
									"id": 395,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@listings_296": {
									"entryPoint": 215,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paymentToken_299": {
									"entryPoint": 350,
									"id": 299,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 2530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed": {
									"entryPoint": 2505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$142_to_t_address": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e": {
									"entryPoint": 2868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42": {
									"entryPoint": 3060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11518:5",
										"nodeType": "YulBlock",
										"src": "0:11518:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "886:32:5",
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nativeSrc": "896:16:5",
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:5",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:5",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:5",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nativeSrc": "967:79:5",
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:5",
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nativeSrc": "1026:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nativeSrc": "1026:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nativeSrc": "997:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nativeSrc": "987:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nativeSrc": "980:43:5",
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nativeSrc": "977:63:5",
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:5",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nativeSrc": "1104:87:5",
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nativeSrc": "1114:29:5",
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nativeSrc": "1123:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nativeSrc": "1152:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nativeSrc": "1152:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:5",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:5",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:5",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nativeSrc": "1280:391:5",
													"nodeType": "YulBlock",
													"src": "1280:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:5",
																"nodeType": "YulBlock",
																"src": "1326:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:5"
																			},
																			"nativeSrc": "1328:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:5"
																		},
																		"nativeSrc": "1328:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:5"
																		},
																		"nativeSrc": "1297:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:5"
																},
																"nativeSrc": "1293:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:5"
															},
															"nativeSrc": "1290:119:5",
															"nodeType": "YulIf",
															"src": "1290:119:5"
														},
														{
															"nativeSrc": "1419:117:5",
															"nodeType": "YulBlock",
															"src": "1419:117:5",
															"statements": [
																{
																	"nativeSrc": "1434:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:5"
																				},
																				"nativeSrc": "1494:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:5"
																		},
																		"nativeSrc": "1473:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:5",
															"nodeType": "YulBlock",
															"src": "1546:118:5",
															"statements": [
																{
																	"nativeSrc": "1561:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:5"
																				},
																				"nativeSrc": "1622:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:5"
																		},
																		"nativeSrc": "1601:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:5",
														"nodeType": "YulTypedName",
														"src": "1242:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:5",
														"nodeType": "YulTypedName",
														"src": "1253:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:5",
														"nodeType": "YulTypedName",
														"src": "1265:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:5",
														"nodeType": "YulTypedName",
														"src": "1273:6:5",
														"type": ""
													}
												],
												"src": "1197:474:5"
											},
											{
												"body": {
													"nativeSrc": "1742:53:5",
													"nodeType": "YulBlock",
													"src": "1742:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1764:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:5"
																		},
																		"nativeSrc": "1764:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:5"
																},
																"nativeSrc": "1752:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:5"
															},
															"nativeSrc": "1752:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1677:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:5",
														"nodeType": "YulTypedName",
														"src": "1730:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:5",
														"nodeType": "YulTypedName",
														"src": "1737:3:5",
														"type": ""
													}
												],
												"src": "1677:118:5"
											},
											{
												"body": {
													"nativeSrc": "1866:53:5",
													"nodeType": "YulBlock",
													"src": "1866:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1883:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1883:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1906:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1906:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1888:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1888:17:5"
																		},
																		"nativeSrc": "1888:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1888:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1876:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1876:6:5"
																},
																"nativeSrc": "1876:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1876:37:5"
															},
															"nativeSrc": "1876:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1876:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1801:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1854:5:5",
														"nodeType": "YulTypedName",
														"src": "1854:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1861:3:5",
														"nodeType": "YulTypedName",
														"src": "1861:3:5",
														"type": ""
													}
												],
												"src": "1801:118:5"
											},
											{
												"body": {
													"nativeSrc": "1967:48:5",
													"nodeType": "YulBlock",
													"src": "1967:48:5",
													"statements": [
														{
															"nativeSrc": "1977:32:5",
															"nodeType": "YulAssignment",
															"src": "1977:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2002:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2002:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1995:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1995:6:5"
																		},
																		"nativeSrc": "1995:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1995:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1988:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1988:6:5"
																},
																"nativeSrc": "1988:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1988:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1977:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1977:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1925:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1949:5:5",
														"nodeType": "YulTypedName",
														"src": "1949:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1959:7:5",
														"nodeType": "YulTypedName",
														"src": "1959:7:5",
														"type": ""
													}
												],
												"src": "1925:90:5"
											},
											{
												"body": {
													"nativeSrc": "2080:50:5",
													"nodeType": "YulBlock",
													"src": "2080:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2097:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2117:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2117:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2102:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "2102:14:5"
																		},
																		"nativeSrc": "2102:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:5"
																},
																"nativeSrc": "2090:34:5",
																"nodeType": "YulFunctionCall",
																"src": "2090:34:5"
															},
															"nativeSrc": "2090:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "2090:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2021:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2068:5:5",
														"nodeType": "YulTypedName",
														"src": "2068:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2075:3:5",
														"nodeType": "YulTypedName",
														"src": "2075:3:5",
														"type": ""
													}
												],
												"src": "2021:109:5"
											},
											{
												"body": {
													"nativeSrc": "2340:448:5",
													"nodeType": "YulBlock",
													"src": "2340:448:5",
													"statements": [
														{
															"nativeSrc": "2350:27:5",
															"nodeType": "YulAssignment",
															"src": "2350:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2362:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2362:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2373:3:5",
																		"nodeType": "YulLiteral",
																		"src": "2373:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2358:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2358:3:5"
																},
																"nativeSrc": "2358:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2358:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2350:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2350:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2431:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2431:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2444:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2455:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2440:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:5"
																		},
																		"nativeSrc": "2440:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2440:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2387:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2387:43:5"
																},
																"nativeSrc": "2387:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2387:71:5"
															},
															"nativeSrc": "2387:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2387:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2512:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2512:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2525:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2525:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2536:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2536:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2521:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2521:3:5"
																		},
																		"nativeSrc": "2521:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2521:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2468:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2468:43:5"
																},
																"nativeSrc": "2468:72:5",
																"nodeType": "YulFunctionCall",
																"src": "2468:72:5"
															},
															"nativeSrc": "2468:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "2468:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2594:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2594:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2607:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2607:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2618:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2618:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2603:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2603:3:5"
																		},
																		"nativeSrc": "2603:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2603:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2550:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2550:43:5"
																},
																"nativeSrc": "2550:72:5",
																"nodeType": "YulFunctionCall",
																"src": "2550:72:5"
															},
															"nativeSrc": "2550:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "2550:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2676:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2689:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2700:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2700:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2685:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:5"
																		},
																		"nativeSrc": "2685:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2632:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:5"
																},
																"nativeSrc": "2632:72:5",
																"nodeType": "YulFunctionCall",
																"src": "2632:72:5"
															},
															"nativeSrc": "2632:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "2632:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "2752:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2752:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2765:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2765:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:3:5",
																				"nodeType": "YulLiteral",
																				"src": "2776:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2761:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2761:3:5"
																		},
																		"nativeSrc": "2761:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2761:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2714:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "2714:37:5"
																},
																"nativeSrc": "2714:67:5",
																"nodeType": "YulFunctionCall",
																"src": "2714:67:5"
															},
															"nativeSrc": "2714:67:5",
															"nodeType": "YulExpressionStatement",
															"src": "2714:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2136:652:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2280:9:5",
														"nodeType": "YulTypedName",
														"src": "2280:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2292:6:5",
														"nodeType": "YulTypedName",
														"src": "2292:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2300:6:5",
														"nodeType": "YulTypedName",
														"src": "2300:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2308:6:5",
														"nodeType": "YulTypedName",
														"src": "2308:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2316:6:5",
														"nodeType": "YulTypedName",
														"src": "2316:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2324:6:5",
														"nodeType": "YulTypedName",
														"src": "2324:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2335:4:5",
														"nodeType": "YulTypedName",
														"src": "2335:4:5",
														"type": ""
													}
												],
												"src": "2136:652:5"
											},
											{
												"body": {
													"nativeSrc": "2826:28:5",
													"nodeType": "YulBlock",
													"src": "2826:28:5",
													"statements": [
														{
															"nativeSrc": "2836:12:5",
															"nodeType": "YulAssignment",
															"src": "2836:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2843:5:5",
																"nodeType": "YulIdentifier",
																"src": "2843:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2836:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2836:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2794:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2812:5:5",
														"nodeType": "YulTypedName",
														"src": "2812:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2822:3:5",
														"nodeType": "YulTypedName",
														"src": "2822:3:5",
														"type": ""
													}
												],
												"src": "2794:60:5"
											},
											{
												"body": {
													"nativeSrc": "2920:82:5",
													"nodeType": "YulBlock",
													"src": "2920:82:5",
													"statements": [
														{
															"nativeSrc": "2930:66:5",
															"nodeType": "YulAssignment",
															"src": "2930:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2988:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2988:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2970:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2970:17:5"
																				},
																				"nativeSrc": "2970:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2970:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2961:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2961:8:5"
																		},
																		"nativeSrc": "2961:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2943:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2943:17:5"
																},
																"nativeSrc": "2943:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2943:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2930:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2930:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2860:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2900:5:5",
														"nodeType": "YulTypedName",
														"src": "2900:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2910:9:5",
														"nodeType": "YulTypedName",
														"src": "2910:9:5",
														"type": ""
													}
												],
												"src": "2860:142:5"
											},
											{
												"body": {
													"nativeSrc": "3068:66:5",
													"nodeType": "YulBlock",
													"src": "3068:66:5",
													"statements": [
														{
															"nativeSrc": "3078:50:5",
															"nodeType": "YulAssignment",
															"src": "3078:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3122:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3122:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3091:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3091:30:5"
																},
																"nativeSrc": "3091:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3091:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3078:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3078:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3008:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3048:5:5",
														"nodeType": "YulTypedName",
														"src": "3048:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3058:9:5",
														"nodeType": "YulTypedName",
														"src": "3058:9:5",
														"type": ""
													}
												],
												"src": "3008:126:5"
											},
											{
												"body": {
													"nativeSrc": "3214:66:5",
													"nodeType": "YulBlock",
													"src": "3214:66:5",
													"statements": [
														{
															"nativeSrc": "3224:50:5",
															"nodeType": "YulAssignment",
															"src": "3224:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3268:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3268:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3237:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3237:30:5"
																},
																"nativeSrc": "3237:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3237:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3224:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3224:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$142_to_t_address",
												"nativeSrc": "3140:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3194:5:5",
														"nodeType": "YulTypedName",
														"src": "3194:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3204:9:5",
														"nodeType": "YulTypedName",
														"src": "3204:9:5",
														"type": ""
													}
												],
												"src": "3140:140:5"
											},
											{
												"body": {
													"nativeSrc": "3365:80:5",
													"nodeType": "YulBlock",
													"src": "3365:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3382:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3382:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3432:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3432:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$142_to_t_address",
																			"nativeSrc": "3387:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "3387:44:5"
																		},
																		"nativeSrc": "3387:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3387:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3375:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3375:6:5"
																},
																"nativeSrc": "3375:64:5",
																"nodeType": "YulFunctionCall",
																"src": "3375:64:5"
															},
															"nativeSrc": "3375:64:5",
															"nodeType": "YulExpressionStatement",
															"src": "3375:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
												"nativeSrc": "3286:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3353:5:5",
														"nodeType": "YulTypedName",
														"src": "3353:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3360:3:5",
														"nodeType": "YulTypedName",
														"src": "3360:3:5",
														"type": ""
													}
												],
												"src": "3286:159:5"
											},
											{
												"body": {
													"nativeSrc": "3563:138:5",
													"nodeType": "YulBlock",
													"src": "3563:138:5",
													"statements": [
														{
															"nativeSrc": "3573:26:5",
															"nodeType": "YulAssignment",
															"src": "3573:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3585:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3585:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3596:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3596:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3581:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3581:3:5"
																},
																"nativeSrc": "3581:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3581:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3573:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3573:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3667:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3667:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3680:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3680:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3691:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3691:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3676:3:5"
																		},
																		"nativeSrc": "3676:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3676:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
																	"nativeSrc": "3609:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "3609:57:5"
																},
																"nativeSrc": "3609:85:5",
																"nodeType": "YulFunctionCall",
																"src": "3609:85:5"
															},
															"nativeSrc": "3609:85:5",
															"nodeType": "YulExpressionStatement",
															"src": "3609:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed",
												"nativeSrc": "3451:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3535:9:5",
														"nodeType": "YulTypedName",
														"src": "3535:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3547:6:5",
														"nodeType": "YulTypedName",
														"src": "3547:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3558:4:5",
														"nodeType": "YulTypedName",
														"src": "3558:4:5",
														"type": ""
													}
												],
												"src": "3451:250:5"
											},
											{
												"body": {
													"nativeSrc": "3807:519:5",
													"nodeType": "YulBlock",
													"src": "3807:519:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3853:83:5",
																"nodeType": "YulBlock",
																"src": "3853:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3855:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3855:77:5"
																			},
																			"nativeSrc": "3855:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3855:79:5"
																		},
																		"nativeSrc": "3855:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3855:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3828:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3828:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3837:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3824:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:5"
																		},
																		"nativeSrc": "3824:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3824:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3849:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3849:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3820:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:5"
																},
																"nativeSrc": "3820:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3820:32:5"
															},
															"nativeSrc": "3817:119:5",
															"nodeType": "YulIf",
															"src": "3817:119:5"
														},
														{
															"nativeSrc": "3946:117:5",
															"nodeType": "YulBlock",
															"src": "3946:117:5",
															"statements": [
																{
																	"nativeSrc": "3961:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3961:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3975:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3975:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3965:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3965:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3990:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3990:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4025:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4025:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4036:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4036:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4021:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4021:3:5"
																				},
																				"nativeSrc": "4021:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4021:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4045:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4045:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4000:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4000:20:5"
																		},
																		"nativeSrc": "4000:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4000:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3990:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3990:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4073:118:5",
															"nodeType": "YulBlock",
															"src": "4073:118:5",
															"statements": [
																{
																	"nativeSrc": "4088:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4088:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4102:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4102:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4092:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4092:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4118:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4118:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4153:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4153:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4164:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4164:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4149:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4149:3:5"
																				},
																				"nativeSrc": "4149:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4149:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4173:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4173:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4128:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4128:20:5"
																		},
																		"nativeSrc": "4128:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4128:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4118:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4118:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4201:118:5",
															"nodeType": "YulBlock",
															"src": "4201:118:5",
															"statements": [
																{
																	"nativeSrc": "4216:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4216:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4230:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4230:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4220:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4220:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4246:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4246:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4281:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4281:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4292:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4292:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4277:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4277:3:5"
																				},
																				"nativeSrc": "4277:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4277:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4301:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4301:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4256:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4256:20:5"
																		},
																		"nativeSrc": "4256:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4256:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4246:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4246:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "3707:619:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3761:9:5",
														"nodeType": "YulTypedName",
														"src": "3761:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3772:7:5",
														"nodeType": "YulTypedName",
														"src": "3772:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3784:6:5",
														"nodeType": "YulTypedName",
														"src": "3784:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3792:6:5",
														"nodeType": "YulTypedName",
														"src": "3792:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3800:6:5",
														"nodeType": "YulTypedName",
														"src": "3800:6:5",
														"type": ""
													}
												],
												"src": "3707:619:5"
											},
											{
												"body": {
													"nativeSrc": "4428:73:5",
													"nodeType": "YulBlock",
													"src": "4428:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4445:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4445:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4450:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4450:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4438:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4438:6:5"
																},
																"nativeSrc": "4438:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4438:19:5"
															},
															"nativeSrc": "4438:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "4438:19:5"
														},
														{
															"nativeSrc": "4466:29:5",
															"nodeType": "YulAssignment",
															"src": "4466:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4485:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4485:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4490:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4490:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4481:3:5"
																},
																"nativeSrc": "4481:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4481:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4466:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "4466:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4332:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4400:3:5",
														"nodeType": "YulTypedName",
														"src": "4400:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4405:6:5",
														"nodeType": "YulTypedName",
														"src": "4405:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4416:11:5",
														"nodeType": "YulTypedName",
														"src": "4416:11:5",
														"type": ""
													}
												],
												"src": "4332:169:5"
											},
											{
												"body": {
													"nativeSrc": "4613:67:5",
													"nodeType": "YulBlock",
													"src": "4613:67:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4635:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4635:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4643:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4643:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4631:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4631:3:5"
																		},
																		"nativeSrc": "4631:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:14:5"
																	},
																	{
																		"hexValue": "4e4654206e6f74206c697374656420666f722073616c65",
																		"kind": "string",
																		"nativeSrc": "4647:25:5",
																		"nodeType": "YulLiteral",
																		"src": "4647:25:5",
																		"type": "",
																		"value": "NFT not listed for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4624:6:5"
																},
																"nativeSrc": "4624:49:5",
																"nodeType": "YulFunctionCall",
																"src": "4624:49:5"
															},
															"nativeSrc": "4624:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "4624:49:5"
														}
													]
												},
												"name": "store_literal_in_memory_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76",
												"nativeSrc": "4507:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4605:6:5",
														"nodeType": "YulTypedName",
														"src": "4605:6:5",
														"type": ""
													}
												],
												"src": "4507:173:5"
											},
											{
												"body": {
													"nativeSrc": "4832:220:5",
													"nodeType": "YulBlock",
													"src": "4832:220:5",
													"statements": [
														{
															"nativeSrc": "4842:74:5",
															"nodeType": "YulAssignment",
															"src": "4842:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4908:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4908:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4913:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4913:2:5",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4849:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4849:58:5"
																},
																"nativeSrc": "4849:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4849:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4842:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4842:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5014:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5014:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76",
																	"nativeSrc": "4925:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4925:88:5"
																},
																"nativeSrc": "4925:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4925:93:5"
															},
															"nativeSrc": "4925:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4925:93:5"
														},
														{
															"nativeSrc": "5027:19:5",
															"nodeType": "YulAssignment",
															"src": "5027:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5038:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5038:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5043:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5043:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5034:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5034:3:5"
																},
																"nativeSrc": "5034:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5034:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5027:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5027:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4686:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4820:3:5",
														"nodeType": "YulTypedName",
														"src": "4820:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4828:3:5",
														"nodeType": "YulTypedName",
														"src": "4828:3:5",
														"type": ""
													}
												],
												"src": "4686:366:5"
											},
											{
												"body": {
													"nativeSrc": "5229:248:5",
													"nodeType": "YulBlock",
													"src": "5229:248:5",
													"statements": [
														{
															"nativeSrc": "5239:26:5",
															"nodeType": "YulAssignment",
															"src": "5239:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5251:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5251:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5262:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5262:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5247:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5247:3:5"
																},
																"nativeSrc": "5247:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5247:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5239:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5239:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5286:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5286:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5297:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5297:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5282:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5282:3:5"
																		},
																		"nativeSrc": "5282:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5282:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5305:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5305:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5311:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5311:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5301:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5301:3:5"
																		},
																		"nativeSrc": "5301:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5301:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5275:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:5"
																},
																"nativeSrc": "5275:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5275:47:5"
															},
															"nativeSrc": "5275:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5275:47:5"
														},
														{
															"nativeSrc": "5331:139:5",
															"nodeType": "YulAssignment",
															"src": "5331:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5465:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5465:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5339:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5339:124:5"
																},
																"nativeSrc": "5339:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5339:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5331:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5331:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5058:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5209:9:5",
														"nodeType": "YulTypedName",
														"src": "5209:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5224:4:5",
														"nodeType": "YulTypedName",
														"src": "5224:4:5",
														"type": ""
													}
												],
												"src": "5058:419:5"
											},
											{
												"body": {
													"nativeSrc": "5637:288:5",
													"nodeType": "YulBlock",
													"src": "5637:288:5",
													"statements": [
														{
															"nativeSrc": "5647:26:5",
															"nodeType": "YulAssignment",
															"src": "5647:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5659:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5659:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5670:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5670:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5655:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5655:3:5"
																},
																"nativeSrc": "5655:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5655:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5647:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5647:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5727:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5727:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5740:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5740:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5751:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5751:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5736:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5736:3:5"
																		},
																		"nativeSrc": "5736:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5736:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5683:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5683:43:5"
																},
																"nativeSrc": "5683:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5683:71:5"
															},
															"nativeSrc": "5683:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5683:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5808:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5808:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5821:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5821:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5832:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5832:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5817:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5817:3:5"
																		},
																		"nativeSrc": "5817:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5817:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5764:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5764:43:5"
																},
																"nativeSrc": "5764:72:5",
																"nodeType": "YulFunctionCall",
																"src": "5764:72:5"
															},
															"nativeSrc": "5764:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "5764:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5890:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5890:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5903:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5903:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5914:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5914:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5899:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5899:3:5"
																		},
																		"nativeSrc": "5899:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5899:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5846:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5846:43:5"
																},
																"nativeSrc": "5846:72:5",
																"nodeType": "YulFunctionCall",
																"src": "5846:72:5"
															},
															"nativeSrc": "5846:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "5846:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5483:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5593:9:5",
														"nodeType": "YulTypedName",
														"src": "5593:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5605:6:5",
														"nodeType": "YulTypedName",
														"src": "5605:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5613:6:5",
														"nodeType": "YulTypedName",
														"src": "5613:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5621:6:5",
														"nodeType": "YulTypedName",
														"src": "5621:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5632:4:5",
														"nodeType": "YulTypedName",
														"src": "5632:4:5",
														"type": ""
													}
												],
												"src": "5483:442:5"
											},
											{
												"body": {
													"nativeSrc": "5971:76:5",
													"nodeType": "YulBlock",
													"src": "5971:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6025:16:5",
																"nodeType": "YulBlock",
																"src": "6025:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6034:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6034:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6037:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6037:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6027:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6027:6:5"
																			},
																			"nativeSrc": "6027:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6027:12:5"
																		},
																		"nativeSrc": "6027:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6027:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5994:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5994:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6016:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6016:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6001:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "6001:14:5"
																				},
																				"nativeSrc": "6001:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6001:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5991:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5991:2:5"
																		},
																		"nativeSrc": "5991:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5991:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5984:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5984:6:5"
																},
																"nativeSrc": "5984:40:5",
																"nodeType": "YulFunctionCall",
																"src": "5984:40:5"
															},
															"nativeSrc": "5981:60:5",
															"nodeType": "YulIf",
															"src": "5981:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5931:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5964:5:5",
														"nodeType": "YulTypedName",
														"src": "5964:5:5",
														"type": ""
													}
												],
												"src": "5931:116:5"
											},
											{
												"body": {
													"nativeSrc": "6113:77:5",
													"nodeType": "YulBlock",
													"src": "6113:77:5",
													"statements": [
														{
															"nativeSrc": "6123:22:5",
															"nodeType": "YulAssignment",
															"src": "6123:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6138:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6138:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6132:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6132:5:5"
																},
																"nativeSrc": "6132:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6132:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6123:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6123:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6178:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6178:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6154:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "6154:23:5"
																},
																"nativeSrc": "6154:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6154:30:5"
															},
															"nativeSrc": "6154:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "6154:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6053:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6091:6:5",
														"nodeType": "YulTypedName",
														"src": "6091:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6099:3:5",
														"nodeType": "YulTypedName",
														"src": "6099:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6107:5:5",
														"nodeType": "YulTypedName",
														"src": "6107:5:5",
														"type": ""
													}
												],
												"src": "6053:137:5"
											},
											{
												"body": {
													"nativeSrc": "6270:271:5",
													"nodeType": "YulBlock",
													"src": "6270:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6316:83:5",
																"nodeType": "YulBlock",
																"src": "6316:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6318:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "6318:77:5"
																			},
																			"nativeSrc": "6318:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6318:79:5"
																		},
																		"nativeSrc": "6318:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6318:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6291:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6291:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6300:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6300:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6287:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6287:3:5"
																		},
																		"nativeSrc": "6287:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6287:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6312:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6312:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6283:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6283:3:5"
																},
																"nativeSrc": "6283:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6283:32:5"
															},
															"nativeSrc": "6280:119:5",
															"nodeType": "YulIf",
															"src": "6280:119:5"
														},
														{
															"nativeSrc": "6409:125:5",
															"nodeType": "YulBlock",
															"src": "6409:125:5",
															"statements": [
																{
																	"nativeSrc": "6424:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6424:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6438:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6438:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6428:6:5",
																			"nodeType": "YulTypedName",
																			"src": "6428:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6453:71:5",
																	"nodeType": "YulAssignment",
																	"src": "6453:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6496:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "6496:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6507:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6507:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6492:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6492:3:5"
																				},
																				"nativeSrc": "6492:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6492:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6516:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6516:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6463:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "6463:28:5"
																		},
																		"nativeSrc": "6463:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6463:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6453:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6453:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6196:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6240:9:5",
														"nodeType": "YulTypedName",
														"src": "6240:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6251:7:5",
														"nodeType": "YulTypedName",
														"src": "6251:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6263:6:5",
														"nodeType": "YulTypedName",
														"src": "6263:6:5",
														"type": ""
													}
												],
												"src": "6196:345:5"
											},
											{
												"body": {
													"nativeSrc": "6653:58:5",
													"nodeType": "YulBlock",
													"src": "6653:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6675:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6675:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6683:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6683:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6671:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:5"
																		},
																		"nativeSrc": "6671:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6671:14:5"
																	},
																	{
																		"hexValue": "5061796d656e74206661696c6564",
																		"kind": "string",
																		"nativeSrc": "6687:16:5",
																		"nodeType": "YulLiteral",
																		"src": "6687:16:5",
																		"type": "",
																		"value": "Payment failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6664:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6664:6:5"
																},
																"nativeSrc": "6664:40:5",
																"nodeType": "YulFunctionCall",
																"src": "6664:40:5"
															},
															"nativeSrc": "6664:40:5",
															"nodeType": "YulExpressionStatement",
															"src": "6664:40:5"
														}
													]
												},
												"name": "store_literal_in_memory_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
												"nativeSrc": "6547:164:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6645:6:5",
														"nodeType": "YulTypedName",
														"src": "6645:6:5",
														"type": ""
													}
												],
												"src": "6547:164:5"
											},
											{
												"body": {
													"nativeSrc": "6863:220:5",
													"nodeType": "YulBlock",
													"src": "6863:220:5",
													"statements": [
														{
															"nativeSrc": "6873:74:5",
															"nodeType": "YulAssignment",
															"src": "6873:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6939:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6939:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6944:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6944:2:5",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6880:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6880:58:5"
																},
																"nativeSrc": "6880:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6880:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6873:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7045:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7045:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
																	"nativeSrc": "6956:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6956:88:5"
																},
																"nativeSrc": "6956:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6956:93:5"
															},
															"nativeSrc": "6956:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6956:93:5"
														},
														{
															"nativeSrc": "7058:19:5",
															"nodeType": "YulAssignment",
															"src": "7058:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7069:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7069:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7074:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7074:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7065:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7065:3:5"
																},
																"nativeSrc": "7065:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7065:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7058:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7058:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6717:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6851:3:5",
														"nodeType": "YulTypedName",
														"src": "6851:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6859:3:5",
														"nodeType": "YulTypedName",
														"src": "6859:3:5",
														"type": ""
													}
												],
												"src": "6717:366:5"
											},
											{
												"body": {
													"nativeSrc": "7260:248:5",
													"nodeType": "YulBlock",
													"src": "7260:248:5",
													"statements": [
														{
															"nativeSrc": "7270:26:5",
															"nodeType": "YulAssignment",
															"src": "7270:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7282:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7282:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7293:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7293:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7278:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7278:3:5"
																},
																"nativeSrc": "7278:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7278:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7270:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7270:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7317:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7317:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7328:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7328:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7313:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7313:3:5"
																		},
																		"nativeSrc": "7313:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7313:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7336:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7336:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7342:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7342:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7332:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:5"
																		},
																		"nativeSrc": "7332:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7332:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7306:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7306:6:5"
																},
																"nativeSrc": "7306:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7306:47:5"
															},
															"nativeSrc": "7306:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7306:47:5"
														},
														{
															"nativeSrc": "7362:139:5",
															"nodeType": "YulAssignment",
															"src": "7362:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7496:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7496:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7370:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "7370:124:5"
																},
																"nativeSrc": "7370:131:5",
																"nodeType": "YulFunctionCall",
																"src": "7370:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7362:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7362:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7089:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7240:9:5",
														"nodeType": "YulTypedName",
														"src": "7240:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7255:4:5",
														"nodeType": "YulTypedName",
														"src": "7255:4:5",
														"type": ""
													}
												],
												"src": "7089:419:5"
											},
											{
												"body": {
													"nativeSrc": "7612:124:5",
													"nodeType": "YulBlock",
													"src": "7612:124:5",
													"statements": [
														{
															"nativeSrc": "7622:26:5",
															"nodeType": "YulAssignment",
															"src": "7622:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7634:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7634:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7645:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7645:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7630:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7630:3:5"
																},
																"nativeSrc": "7630:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7630:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7622:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7622:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7702:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7702:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7715:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7715:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7726:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7726:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7711:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7711:3:5"
																		},
																		"nativeSrc": "7711:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7711:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7658:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7658:43:5"
																},
																"nativeSrc": "7658:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7658:71:5"
															},
															"nativeSrc": "7658:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7658:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7514:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7584:9:5",
														"nodeType": "YulTypedName",
														"src": "7584:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7596:6:5",
														"nodeType": "YulTypedName",
														"src": "7596:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7607:4:5",
														"nodeType": "YulTypedName",
														"src": "7607:4:5",
														"type": ""
													}
												],
												"src": "7514:222:5"
											},
											{
												"body": {
													"nativeSrc": "7805:80:5",
													"nodeType": "YulBlock",
													"src": "7805:80:5",
													"statements": [
														{
															"nativeSrc": "7815:22:5",
															"nodeType": "YulAssignment",
															"src": "7815:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7830:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7830:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7824:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7824:5:5"
																},
																"nativeSrc": "7824:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7824:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7815:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7815:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7873:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7873:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7846:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "7846:26:5"
																},
																"nativeSrc": "7846:33:5",
																"nodeType": "YulFunctionCall",
																"src": "7846:33:5"
															},
															"nativeSrc": "7846:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "7846:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "7742:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7783:6:5",
														"nodeType": "YulTypedName",
														"src": "7783:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7791:3:5",
														"nodeType": "YulTypedName",
														"src": "7791:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7799:5:5",
														"nodeType": "YulTypedName",
														"src": "7799:5:5",
														"type": ""
													}
												],
												"src": "7742:143:5"
											},
											{
												"body": {
													"nativeSrc": "7968:274:5",
													"nodeType": "YulBlock",
													"src": "7968:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8014:83:5",
																"nodeType": "YulBlock",
																"src": "8014:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8016:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8016:77:5"
																			},
																			"nativeSrc": "8016:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8016:79:5"
																		},
																		"nativeSrc": "8016:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8016:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7989:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7989:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7998:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7998:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7985:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:5"
																		},
																		"nativeSrc": "7985:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7985:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8010:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7981:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7981:3:5"
																},
																"nativeSrc": "7981:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7981:32:5"
															},
															"nativeSrc": "7978:119:5",
															"nodeType": "YulIf",
															"src": "7978:119:5"
														},
														{
															"nativeSrc": "8107:128:5",
															"nodeType": "YulBlock",
															"src": "8107:128:5",
															"statements": [
																{
																	"nativeSrc": "8122:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8122:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8136:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8126:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8126:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8151:74:5",
																	"nodeType": "YulAssignment",
																	"src": "8151:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8197:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8197:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8208:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8208:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8193:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8193:3:5"
																				},
																				"nativeSrc": "8193:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8193:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8217:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8217:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "8161:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "8161:31:5"
																		},
																		"nativeSrc": "8161:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8161:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8151:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8151:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "7891:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7938:9:5",
														"nodeType": "YulTypedName",
														"src": "7938:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7949:7:5",
														"nodeType": "YulTypedName",
														"src": "7949:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7961:6:5",
														"nodeType": "YulTypedName",
														"src": "7961:6:5",
														"type": ""
													}
												],
												"src": "7891:351:5"
											},
											{
												"body": {
													"nativeSrc": "8354:68:5",
													"nodeType": "YulBlock",
													"src": "8354:68:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8376:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8376:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8384:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8384:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8372:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8372:3:5"
																		},
																		"nativeSrc": "8372:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8372:14:5"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572206f6620746865204e4654",
																		"kind": "string",
																		"nativeSrc": "8388:26:5",
																		"nodeType": "YulLiteral",
																		"src": "8388:26:5",
																		"type": "",
																		"value": "Not the owner of the NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8365:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8365:6:5"
																},
																"nativeSrc": "8365:50:5",
																"nodeType": "YulFunctionCall",
																"src": "8365:50:5"
															},
															"nativeSrc": "8365:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "8365:50:5"
														}
													]
												},
												"name": "store_literal_in_memory_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42",
												"nativeSrc": "8248:174:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8346:6:5",
														"nodeType": "YulTypedName",
														"src": "8346:6:5",
														"type": ""
													}
												],
												"src": "8248:174:5"
											},
											{
												"body": {
													"nativeSrc": "8574:220:5",
													"nodeType": "YulBlock",
													"src": "8574:220:5",
													"statements": [
														{
															"nativeSrc": "8584:74:5",
															"nodeType": "YulAssignment",
															"src": "8584:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8650:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8650:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8655:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8655:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8591:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8591:58:5"
																},
																"nativeSrc": "8591:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8591:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8584:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8584:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8756:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8756:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42",
																	"nativeSrc": "8667:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8667:88:5"
																},
																"nativeSrc": "8667:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8667:93:5"
															},
															"nativeSrc": "8667:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8667:93:5"
														},
														{
															"nativeSrc": "8769:19:5",
															"nodeType": "YulAssignment",
															"src": "8769:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8780:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8780:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8785:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8785:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8776:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8776:3:5"
																},
																"nativeSrc": "8776:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8776:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8769:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8428:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8562:3:5",
														"nodeType": "YulTypedName",
														"src": "8562:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8570:3:5",
														"nodeType": "YulTypedName",
														"src": "8570:3:5",
														"type": ""
													}
												],
												"src": "8428:366:5"
											},
											{
												"body": {
													"nativeSrc": "8971:248:5",
													"nodeType": "YulBlock",
													"src": "8971:248:5",
													"statements": [
														{
															"nativeSrc": "8981:26:5",
															"nodeType": "YulAssignment",
															"src": "8981:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8993:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8993:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9004:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9004:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8989:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8989:3:5"
																},
																"nativeSrc": "8989:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8989:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8981:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8981:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9028:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9028:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9039:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9039:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9024:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9024:3:5"
																		},
																		"nativeSrc": "9024:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9024:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9047:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9047:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9053:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9043:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9043:3:5"
																		},
																		"nativeSrc": "9043:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9043:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9017:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9017:6:5"
																},
																"nativeSrc": "9017:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9017:47:5"
															},
															"nativeSrc": "9017:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9017:47:5"
														},
														{
															"nativeSrc": "9073:139:5",
															"nodeType": "YulAssignment",
															"src": "9073:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9207:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9207:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9081:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9081:124:5"
																},
																"nativeSrc": "9081:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9081:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9073:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9073:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8800:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8951:9:5",
														"nodeType": "YulTypedName",
														"src": "8951:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8966:4:5",
														"nodeType": "YulTypedName",
														"src": "8966:4:5",
														"type": ""
													}
												],
												"src": "8800:419:5"
											},
											{
												"body": {
													"nativeSrc": "9351:206:5",
													"nodeType": "YulBlock",
													"src": "9351:206:5",
													"statements": [
														{
															"nativeSrc": "9361:26:5",
															"nodeType": "YulAssignment",
															"src": "9361:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9373:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9373:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9384:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9384:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9369:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9369:3:5"
																},
																"nativeSrc": "9369:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9369:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9361:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9361:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9441:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9441:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9454:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9454:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9465:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9465:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9450:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9450:3:5"
																		},
																		"nativeSrc": "9450:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9450:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9397:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9397:43:5"
																},
																"nativeSrc": "9397:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9397:71:5"
															},
															"nativeSrc": "9397:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9397:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9522:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9522:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9535:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9535:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9546:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9546:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9531:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9531:3:5"
																		},
																		"nativeSrc": "9531:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9531:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9478:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9478:43:5"
																},
																"nativeSrc": "9478:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9478:72:5"
															},
															"nativeSrc": "9478:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9478:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "9225:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9315:9:5",
														"nodeType": "YulTypedName",
														"src": "9315:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9327:6:5",
														"nodeType": "YulTypedName",
														"src": "9327:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9335:6:5",
														"nodeType": "YulTypedName",
														"src": "9335:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9346:4:5",
														"nodeType": "YulTypedName",
														"src": "9346:4:5",
														"type": ""
													}
												],
												"src": "9225:332:5"
											},
											{
												"body": {
													"nativeSrc": "9669:65:5",
													"nodeType": "YulBlock",
													"src": "9669:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9691:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9691:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9699:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9699:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9687:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9687:3:5"
																		},
																		"nativeSrc": "9687:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9687:14:5"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617070726f766564",
																		"kind": "string",
																		"nativeSrc": "9703:23:5",
																		"nodeType": "YulLiteral",
																		"src": "9703:23:5",
																		"type": "",
																		"value": "Contract not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9680:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9680:6:5"
																},
																"nativeSrc": "9680:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9680:47:5"
															},
															"nativeSrc": "9680:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9680:47:5"
														}
													]
												},
												"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
												"nativeSrc": "9563:171:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9661:6:5",
														"nodeType": "YulTypedName",
														"src": "9661:6:5",
														"type": ""
													}
												],
												"src": "9563:171:5"
											},
											{
												"body": {
													"nativeSrc": "9886:220:5",
													"nodeType": "YulBlock",
													"src": "9886:220:5",
													"statements": [
														{
															"nativeSrc": "9896:74:5",
															"nodeType": "YulAssignment",
															"src": "9896:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9962:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9962:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9967:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9967:2:5",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9903:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9903:58:5"
																},
																"nativeSrc": "9903:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9903:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9896:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9896:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10068:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10068:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																	"nativeSrc": "9979:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9979:88:5"
																},
																"nativeSrc": "9979:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9979:93:5"
															},
															"nativeSrc": "9979:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9979:93:5"
														},
														{
															"nativeSrc": "10081:19:5",
															"nodeType": "YulAssignment",
															"src": "10081:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10092:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10092:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10097:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10097:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10088:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:5"
																},
																"nativeSrc": "10088:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10088:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10081:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10081:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9740:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9874:3:5",
														"nodeType": "YulTypedName",
														"src": "9874:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9882:3:5",
														"nodeType": "YulTypedName",
														"src": "9882:3:5",
														"type": ""
													}
												],
												"src": "9740:366:5"
											},
											{
												"body": {
													"nativeSrc": "10283:248:5",
													"nodeType": "YulBlock",
													"src": "10283:248:5",
													"statements": [
														{
															"nativeSrc": "10293:26:5",
															"nodeType": "YulAssignment",
															"src": "10293:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10305:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10305:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10316:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10316:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10301:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10301:3:5"
																},
																"nativeSrc": "10301:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10301:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10293:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10293:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10340:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10340:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10351:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10351:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10336:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10336:3:5"
																		},
																		"nativeSrc": "10336:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10336:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10359:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10359:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10365:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10365:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10355:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10355:3:5"
																		},
																		"nativeSrc": "10355:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10355:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10329:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10329:6:5"
																},
																"nativeSrc": "10329:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10329:47:5"
															},
															"nativeSrc": "10329:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10329:47:5"
														},
														{
															"nativeSrc": "10385:139:5",
															"nodeType": "YulAssignment",
															"src": "10385:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10519:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10519:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10393:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10393:124:5"
																},
																"nativeSrc": "10393:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10393:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10385:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10385:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10112:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10263:9:5",
														"nodeType": "YulTypedName",
														"src": "10263:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10278:4:5",
														"nodeType": "YulTypedName",
														"src": "10278:4:5",
														"type": ""
													}
												],
												"src": "10112:419:5"
											},
											{
												"body": {
													"nativeSrc": "10643:75:5",
													"nodeType": "YulBlock",
													"src": "10643:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10665:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10665:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10673:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10673:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10661:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10661:3:5"
																		},
																		"nativeSrc": "10661:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10661:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "10677:33:5",
																		"nodeType": "YulLiteral",
																		"src": "10677:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10654:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10654:6:5"
																},
																"nativeSrc": "10654:57:5",
																"nodeType": "YulFunctionCall",
																"src": "10654:57:5"
															},
															"nativeSrc": "10654:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "10654:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "10537:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10635:6:5",
														"nodeType": "YulTypedName",
														"src": "10635:6:5",
														"type": ""
													}
												],
												"src": "10537:181:5"
											},
											{
												"body": {
													"nativeSrc": "10870:220:5",
													"nodeType": "YulBlock",
													"src": "10870:220:5",
													"statements": [
														{
															"nativeSrc": "10880:74:5",
															"nodeType": "YulAssignment",
															"src": "10880:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10946:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10946:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10951:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10951:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10887:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10887:58:5"
																},
																"nativeSrc": "10887:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10887:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10880:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10880:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11052:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11052:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "10963:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10963:88:5"
																},
																"nativeSrc": "10963:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10963:93:5"
															},
															"nativeSrc": "10963:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10963:93:5"
														},
														{
															"nativeSrc": "11065:19:5",
															"nodeType": "YulAssignment",
															"src": "11065:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11076:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11076:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11081:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11081:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11072:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11072:3:5"
																},
																"nativeSrc": "11072:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11072:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11065:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11065:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10724:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10858:3:5",
														"nodeType": "YulTypedName",
														"src": "10858:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10866:3:5",
														"nodeType": "YulTypedName",
														"src": "10866:3:5",
														"type": ""
													}
												],
												"src": "10724:366:5"
											},
											{
												"body": {
													"nativeSrc": "11267:248:5",
													"nodeType": "YulBlock",
													"src": "11267:248:5",
													"statements": [
														{
															"nativeSrc": "11277:26:5",
															"nodeType": "YulAssignment",
															"src": "11277:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11289:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11289:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11300:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11300:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11285:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11285:3:5"
																},
																"nativeSrc": "11285:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11285:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11277:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11277:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11324:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11324:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11335:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11335:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11320:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11320:3:5"
																		},
																		"nativeSrc": "11320:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11320:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11343:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11343:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11349:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11349:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11339:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11339:3:5"
																		},
																		"nativeSrc": "11339:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11339:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11313:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11313:6:5"
																},
																"nativeSrc": "11313:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11313:47:5"
															},
															"nativeSrc": "11313:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11313:47:5"
														},
														{
															"nativeSrc": "11369:139:5",
															"nodeType": "YulAssignment",
															"src": "11369:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11503:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11503:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11377:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11377:124:5"
																},
																"nativeSrc": "11377:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11377:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11369:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11369:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11096:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11247:9:5",
														"nodeType": "YulTypedName",
														"src": "11247:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11262:4:5",
														"nodeType": "YulTypedName",
														"src": "11262:4:5",
														"type": ""
													}
												],
												"src": "11096:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$142_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$142_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT not listed for sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the owner of the NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610049575f3560e01c806207df301461004d5780633013ce2914610081578063a82ba76f1461009f578063ad05f1b4146100bb575b5f80fd5b610067600480360381019061006291906108a7565b6100d7565b60405161007895949392919061091d565b60405180910390f35b61008961015e565b60405161009691906109c9565b60405180910390f35b6100b960048036038101906100b491906108a7565b610183565b005b6100d560048036038101906100d091906109e2565b610450565b005b6001602052815f5260405f20602052805f5260405f205f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015f9054906101000a900460ff16905085565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61018b6107c0565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806004015f9054906101000a900460ff1661022a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022190610a8c565b60405180910390fd5b5f83905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518463ffffffff1660e01b81526004016102b293929190610aaa565b6020604051808303815f875af11580156102ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102f29190610b09565b610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032890610b7e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166342842e0e835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633866040518463ffffffff1660e01b815260040161039093929190610aaa565b5f604051808303815f87803b1580156103a7575f80fd5b505af11580156103b9573d5f803e3d5ffd5b505050505f826004015f6101000a81548160ff021916908315150217905550828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84a34755616a04d6e547597ec5933d7ca8cf181bb354026be7e93e147edf0ab7856003015460405161043a9190610b9c565b60405180910390a4505061044c61080d565b5050565b5f8390503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016104a49190610b9c565b602060405180830381865afa1580156104bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e39190610bc9565b73ffffffffffffffffffffffffffffffffffffffff1614610539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053090610c3e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b8152600401610574929190610c5c565b602060405180830381865afa15801561058f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b39190610b09565b6105f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e990610ccd565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020016001151581525060015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8581526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015f6101000a81548160ff021916908315150217905550905050828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbeab3a2bb824b124a8a1eb465eec003338d61b414db132d37e9b3a984fdcf010856040516107b29190610b9c565b60405180910390a450505050565b60025f5403610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90610d35565b60405180910390fd5b60025f81905550565b60015f81905550565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108438261081a565b9050919050565b61085381610839565b811461085d575f80fd5b50565b5f8135905061086e8161084a565b92915050565b5f819050919050565b61088681610874565b8114610890575f80fd5b50565b5f813590506108a18161087d565b92915050565b5f80604083850312156108bd576108bc610816565b5b5f6108ca85828601610860565b92505060206108db85828601610893565b9150509250929050565b6108ee81610839565b82525050565b6108fd81610874565b82525050565b5f8115159050919050565b61091781610903565b82525050565b5f60a0820190506109305f8301886108e5565b61093d60208301876108e5565b61094a60408301866108f4565b61095760608301856108f4565b610964608083018461090e565b9695505050505050565b5f819050919050565b5f61099161098c6109878461081a565b61096e565b61081a565b9050919050565b5f6109a282610977565b9050919050565b5f6109b382610998565b9050919050565b6109c3816109a9565b82525050565b5f6020820190506109dc5f8301846109ba565b92915050565b5f805f606084860312156109f9576109f8610816565b5b5f610a0686828701610860565b9350506020610a1786828701610893565b9250506040610a2886828701610893565b9150509250925092565b5f82825260208201905092915050565b7f4e4654206e6f74206c697374656420666f722073616c650000000000000000005f82015250565b5f610a76601783610a32565b9150610a8182610a42565b602082019050919050565b5f6020820190508181035f830152610aa381610a6a565b9050919050565b5f606082019050610abd5f8301866108e5565b610aca60208301856108e5565b610ad760408301846108f4565b949350505050565b610ae881610903565b8114610af2575f80fd5b50565b5f81519050610b0381610adf565b92915050565b5f60208284031215610b1e57610b1d610816565b5b5f610b2b84828501610af5565b91505092915050565b7f5061796d656e74206661696c65640000000000000000000000000000000000005f82015250565b5f610b68600e83610a32565b9150610b7382610b34565b602082019050919050565b5f6020820190508181035f830152610b9581610b5c565b9050919050565b5f602082019050610baf5f8301846108f4565b92915050565b5f81519050610bc38161084a565b92915050565b5f60208284031215610bde57610bdd610816565b5b5f610beb84828501610bb5565b91505092915050565b7f4e6f7420746865206f776e6572206f6620746865204e465400000000000000005f82015250565b5f610c28601883610a32565b9150610c3382610bf4565b602082019050919050565b5f6020820190508181035f830152610c5581610c1c565b9050919050565b5f604082019050610c6f5f8301856108e5565b610c7c60208301846108e5565b9392505050565b7f436f6e7472616374206e6f7420617070726f76656400000000000000000000005f82015250565b5f610cb7601583610a32565b9150610cc282610c83565b602082019050919050565b5f6020820190508181035f830152610ce481610cab565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610d1f601f83610a32565b9150610d2a82610ceb565b602082019050919050565b5f6020820190508181035f830152610d4c81610d13565b905091905056fea2646970667358221220d12d0a474c4c63f05b7d3a5b114abdfd591e5fbf95cfaf5aa6e0047d3e09ae9764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x7DF30 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xAD05F1B4 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x7C0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x221 SWAP1 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP3 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x84A34755616A04D6E547597EC5933D7CA8CF181BB354026BE7E93E147EDF0AB7 DUP6 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x44C PUSH2 0x80D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP4 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x530 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP3 SWAP2 SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E9 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEAB3A2BB824B124A8A1EB465EEC003338D61B414DB132D37E9B3A984FDCF010 DUP6 PUSH1 0x40 MLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FB SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x843 DUP3 PUSH2 0x81A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x853 DUP2 PUSH2 0x839 JUMP JUMPDEST DUP2 EQ PUSH2 0x85D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86E DUP2 PUSH2 0x84A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x886 DUP2 PUSH2 0x874 JUMP JUMPDEST DUP2 EQ PUSH2 0x890 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A1 DUP2 PUSH2 0x87D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8BD JUMPI PUSH2 0x8BC PUSH2 0x816 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8CA DUP6 DUP3 DUP7 ADD PUSH2 0x860 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8DB DUP6 DUP3 DUP7 ADD PUSH2 0x893 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EE DUP2 PUSH2 0x839 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8FD DUP2 PUSH2 0x874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x917 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x930 PUSH0 DUP4 ADD DUP9 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x93D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x94A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x957 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x964 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x90E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x991 PUSH2 0x98C PUSH2 0x987 DUP5 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9A2 DUP3 PUSH2 0x977 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B3 DUP3 PUSH2 0x998 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x9A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DC PUSH0 DUP4 ADD DUP5 PUSH2 0x9BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x816 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA06 DUP7 DUP3 DUP8 ADD PUSH2 0x860 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA17 DUP7 DUP3 DUP8 ADD PUSH2 0x893 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA28 DUP7 DUP3 DUP8 ADD PUSH2 0x893 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E4654206E6F74206C697374656420666F722073616C65000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA76 PUSH1 0x17 DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xA81 DUP3 PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAA3 DUP2 PUSH2 0xA6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xABD PUSH0 DUP4 ADD DUP7 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0xACA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0xAD7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8F4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xAE8 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB03 DUP2 PUSH2 0xADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1E JUMPI PUSH2 0xB1D PUSH2 0x816 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB2B DUP5 DUP3 DUP6 ADD PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061796D656E74206661696C6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB68 PUSH1 0xE DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xB73 DUP3 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB95 DUP2 PUSH2 0xB5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAF PUSH0 DUP4 ADD DUP5 PUSH2 0x8F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC3 DUP2 PUSH2 0x84A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0x816 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBEB DUP5 DUP3 DUP6 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E6572206F6620746865204E46540000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC28 PUSH1 0x18 DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xC33 DUP3 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC55 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC6F PUSH0 DUP4 ADD DUP6 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0xC7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCB7 PUSH1 0x15 DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC2 DUP3 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE4 DUP2 PUSH2 0xCAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD1F PUSH1 0x1F DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2A DUP3 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD4C DUP2 PUSH2 0xD13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0x2D EXP SELFBALANCE 0x4C 0x4C PUSH4 0xF05B7D3A JUMPDEST GT BLOBBASEFEE 0xBD REVERT MSIZE 0x1E PUSH0 0xBF SWAP6 0xCF 0xAF GAS 0xA6 0xE0 DIV PUSH30 0x3E09AE9764736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "238:1832:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:63;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;502:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1484:584;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;929:549;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;433:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;502:26::-;;;;;;;;;;;;;:::o;1484:584::-;2261:21:0;:19;:21::i;:::-;1572:23:4::1;1598:8;:22;1607:12;1598:22;;;;;;;;;;;;;;;:32;1621:8;1598:32;;;;;;;;;;;1572:58;;1648:7;:16;;;;;;;;;;;;1640:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1703:11;1725:12;1703:35;;1770:12;;;;;;;;;;;:25;;;1796:10;1808:7;:14;;;;;;;;;;;;1824:7;:13;;;1770:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1749:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;1889:3;:20;;;1910:7;:14;;;;;;;;;;;;1926:10;1938:8;1889:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1977:5;1958:7;:16;;;:24;;;;;;;;;;;;;;;;;;2037:8;2023:12;1998:63;;2011:10;1998:63;;;2047:7;:13;;;1998:63;;;;;;:::i;:::-;;;;;;;;1562:506;;2303:20:0::0;:18;:20::i;:::-;1484:584:4;;:::o;929:549::-;1021:11;1043:12;1021:35;;1099:10;1074:35;;:3;:11;;;1086:8;1074:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;;1066:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1156:3;:20;;;1177:10;1197:4;1156:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1148:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1275:127;;;;;;;;1296:10;1275:127;;;;;;1320:12;1275:127;;;;;;1346:8;1275:127;;;;1368:6;1275:127;;;;1388:4;1275:127;;;;;1240:8;:22;1249:12;1240:22;;;;;;;;;;;;;;;:32;1263:8;1240:32;;;;;;;;;;;:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:8;1440:12;1418:53;;1428:10;1418:53;;;1464:6;1418:53;;;;;;:::i;:::-;;;;;;;;1011:467;929:549;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:::-;1888:24;1906:5;1888:24;:::i;:::-;1883:3;1876:37;1801:118;;:::o;1925:90::-;1959:7;2002:5;1995:13;1988:21;1977:32;;1925:90;;;:::o;2021:109::-;2102:21;2117:5;2102:21;:::i;:::-;2097:3;2090:34;2021:109;;:::o;2136:652::-;2335:4;2373:3;2362:9;2358:19;2350:27;;2387:71;2455:1;2444:9;2440:17;2431:6;2387:71;:::i;:::-;2468:72;2536:2;2525:9;2521:18;2512:6;2468:72;:::i;:::-;2550;2618:2;2607:9;2603:18;2594:6;2550:72;:::i;:::-;2632;2700:2;2689:9;2685:18;2676:6;2632:72;:::i;:::-;2714:67;2776:3;2765:9;2761:19;2752:6;2714:67;:::i;:::-;2136:652;;;;;;;;:::o;2794:60::-;2822:3;2843:5;2836:12;;2794:60;;;:::o;2860:142::-;2910:9;2943:53;2961:34;2970:24;2988:5;2970:24;:::i;:::-;2961:34;:::i;:::-;2943:53;:::i;:::-;2930:66;;2860:142;;;:::o;3008:126::-;3058:9;3091:37;3122:5;3091:37;:::i;:::-;3078:50;;3008:126;;;:::o;3140:140::-;3204:9;3237:37;3268:5;3237:37;:::i;:::-;3224:50;;3140:140;;;:::o;3286:159::-;3387:51;3432:5;3387:51;:::i;:::-;3382:3;3375:64;3286:159;;:::o;3451:250::-;3558:4;3596:2;3585:9;3581:18;3573:26;;3609:85;3691:1;3680:9;3676:17;3667:6;3609:85;:::i;:::-;3451:250;;;;:::o;3707:619::-;3784:6;3792;3800;3849:2;3837:9;3828:7;3824:23;3820:32;3817:119;;;3855:79;;:::i;:::-;3817:119;3975:1;4000:53;4045:7;4036:6;4025:9;4021:22;4000:53;:::i;:::-;3990:63;;3946:117;4102:2;4128:53;4173:7;4164:6;4153:9;4149:22;4128:53;:::i;:::-;4118:63;;4073:118;4230:2;4256:53;4301:7;4292:6;4281:9;4277:22;4256:53;:::i;:::-;4246:63;;4201:118;3707:619;;;;;:::o;4332:169::-;4416:11;4450:6;4445:3;4438:19;4490:4;4485:3;4481:14;4466:29;;4332:169;;;;:::o;4507:173::-;4647:25;4643:1;4635:6;4631:14;4624:49;4507:173;:::o;4686:366::-;4828:3;4849:67;4913:2;4908:3;4849:67;:::i;:::-;4842:74;;4925:93;5014:3;4925:93;:::i;:::-;5043:2;5038:3;5034:12;5027:19;;4686:366;;;:::o;5058:419::-;5224:4;5262:2;5251:9;5247:18;5239:26;;5311:9;5305:4;5301:20;5297:1;5286:9;5282:17;5275:47;5339:131;5465:4;5339:131;:::i;:::-;5331:139;;5058:419;;;:::o;5483:442::-;5632:4;5670:2;5659:9;5655:18;5647:26;;5683:71;5751:1;5740:9;5736:17;5727:6;5683:71;:::i;:::-;5764:72;5832:2;5821:9;5817:18;5808:6;5764:72;:::i;:::-;5846;5914:2;5903:9;5899:18;5890:6;5846:72;:::i;:::-;5483:442;;;;;;:::o;5931:116::-;6001:21;6016:5;6001:21;:::i;:::-;5994:5;5991:32;5981:60;;6037:1;6034;6027:12;5981:60;5931:116;:::o;6053:137::-;6107:5;6138:6;6132:13;6123:22;;6154:30;6178:5;6154:30;:::i;:::-;6053:137;;;;:::o;6196:345::-;6263:6;6312:2;6300:9;6291:7;6287:23;6283:32;6280:119;;;6318:79;;:::i;:::-;6280:119;6438:1;6463:61;6516:7;6507:6;6496:9;6492:22;6463:61;:::i;:::-;6453:71;;6409:125;6196:345;;;;:::o;6547:164::-;6687:16;6683:1;6675:6;6671:14;6664:40;6547:164;:::o;6717:366::-;6859:3;6880:67;6944:2;6939:3;6880:67;:::i;:::-;6873:74;;6956:93;7045:3;6956:93;:::i;:::-;7074:2;7069:3;7065:12;7058:19;;6717:366;;;:::o;7089:419::-;7255:4;7293:2;7282:9;7278:18;7270:26;;7342:9;7336:4;7332:20;7328:1;7317:9;7313:17;7306:47;7370:131;7496:4;7370:131;:::i;:::-;7362:139;;7089:419;;;:::o;7514:222::-;7607:4;7645:2;7634:9;7630:18;7622:26;;7658:71;7726:1;7715:9;7711:17;7702:6;7658:71;:::i;:::-;7514:222;;;;:::o;7742:143::-;7799:5;7830:6;7824:13;7815:22;;7846:33;7873:5;7846:33;:::i;:::-;7742:143;;;;:::o;7891:351::-;7961:6;8010:2;7998:9;7989:7;7985:23;7981:32;7978:119;;;8016:79;;:::i;:::-;7978:119;8136:1;8161:64;8217:7;8208:6;8197:9;8193:22;8161:64;:::i;:::-;8151:74;;8107:128;7891:351;;;;:::o;8248:174::-;8388:26;8384:1;8376:6;8372:14;8365:50;8248:174;:::o;8428:366::-;8570:3;8591:67;8655:2;8650:3;8591:67;:::i;:::-;8584:74;;8667:93;8756:3;8667:93;:::i;:::-;8785:2;8780:3;8776:12;8769:19;;8428:366;;;:::o;8800:419::-;8966:4;9004:2;8993:9;8989:18;8981:26;;9053:9;9047:4;9043:20;9039:1;9028:9;9024:17;9017:47;9081:131;9207:4;9081:131;:::i;:::-;9073:139;;8800:419;;;:::o;9225:332::-;9346:4;9384:2;9373:9;9369:18;9361:26;;9397:71;9465:1;9454:9;9450:17;9441:6;9397:71;:::i;:::-;9478:72;9546:2;9535:9;9531:18;9522:6;9478:72;:::i;:::-;9225:332;;;;;:::o;9563:171::-;9703:23;9699:1;9691:6;9687:14;9680:47;9563:171;:::o;9740:366::-;9882:3;9903:67;9967:2;9962:3;9903:67;:::i;:::-;9896:74;;9979:93;10068:3;9979:93;:::i;:::-;10097:2;10092:3;10088:12;10081:19;;9740:366;;;:::o;10112:419::-;10278:4;10316:2;10305:9;10301:18;10293:26;;10365:9;10359:4;10355:20;10351:1;10340:9;10336:17;10329:47;10393:131;10519:4;10393:131;:::i;:::-;10385:139;;10112:419;;;:::o;10537:181::-;10677:33;10673:1;10665:6;10661:14;10654:57;10537:181;:::o;10724:366::-;10866:3;10887:67;10951:2;10946:3;10887:67;:::i;:::-;10880:74;;10963:93;11052:3;10963:93;:::i;:::-;11081:2;11076:3;11072:12;11065:19;;10724:366;;;:::o;11096:419::-;11262:4;11300:2;11289:9;11285:18;11277:26;;11349:9;11343:4;11339:20;11335:1;11324:9;11320:17;11313:47;11377:131;11503:4;11377:131;:::i;:::-;11369:139;;11096:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "693000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyNFT(address,uint256)": "infinite",
								"listNFT(address,uint256,uint256)": "infinite",
								"listings(address,uint256)": "infinite",
								"paymentToken()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 238,
									"end": 2070,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 835,
									"end": 923,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 835,
									"end": 923,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 835,
									"end": 923,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 835,
									"end": 923,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 835,
									"end": 923,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 835,
									"end": 923,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 835,
									"end": 923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 835,
									"end": 923,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 902,
									"end": 915,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 880,
									"end": 892,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 880,
									"end": 892,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 916,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 880,
									"end": 916,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 880,
									"end": 916,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 880,
									"end": 916,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 880,
									"end": 916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 835,
									"end": 923,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 2070,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d12d0a474c4c63f05b7d3a5b114abdfd591e5fbf95cfaf5aa6e0047d3e09ae9764736f6c634300081a0033",
									".code": [
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "7DF30"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "3013CE29"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "A82BA76F"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "AD05F1B4"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2070,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 433,
											"end": 496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 433,
											"end": 496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 433,
											"end": 496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 502,
											"end": 528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 502,
											"end": 528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1484,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1484,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 929,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 929,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 433,
											"end": 496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 433,
											"end": 496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 528,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 502,
											"end": 528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1619,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1620,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1629,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1630,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1572,
											"end": 1630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1572,
											"end": 1630,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1648,
											"end": 1664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1640,
											"end": 1692,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1738,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1795,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1796,
											"end": 1806,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1815,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1831,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1824,
											"end": 1837,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1770,
											"end": 1838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1770,
											"end": 1838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1770,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1749,
											"end": 1878,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1749,
											"end": 1878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1889,
											"end": 1909,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 1910,
											"end": 1917,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1924,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1936,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1946,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1889,
											"end": 1947,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1947,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1947,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1958,
											"end": 1974,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1982,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2037,
											"end": 2045,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2035,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2021,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "84A34755616A04D6E547597EC5933D7CA8CF181BB354026BE7E93E147EDF0AB7"
										},
										{
											"begin": 2047,
											"end": 2054,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2047,
											"end": 2060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1998,
											"end": 2061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2061,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2068,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2068,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 2068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1109,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1109,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1085,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 1086,
											"end": 1094,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1074,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1074,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1109,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1109,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1109,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1066,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1176,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "E985E9C5"
										},
										{
											"begin": 1177,
											"end": 1187,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1201,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1156,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1156,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1156,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1148,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1148,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1306,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 1332,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1354,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1392,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1402,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1261,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1271,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1402,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1438,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "BEAB3A2BB824B124A8A1EB465EEC003338D61B414DB132D37E9B3A984FDCF010"
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1418,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1471,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 1011,
											"end": 1478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1919,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1801,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1888,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1888,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1913,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 2015,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1925,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2007,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1995,
											"end": 2008,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 2015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 2015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 2015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 2015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2130,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2021,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2102,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2123,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2102,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2362,
											"end": 2371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2437,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2387,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2458,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2387,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2536,
											"end": 2538,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2468,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2540,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2468,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2607,
											"end": 2616,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2622,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2550,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2632,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2704,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2632,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2776,
											"end": 2779,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2780,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2714,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2781,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2714,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2854,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2794,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 2825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2848,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2854,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 3002,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2860,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2961,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2970,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2988,
											"end": 2993,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2970,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 2994,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2970,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2961,
											"end": 2995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2995,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2961,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 3002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 3002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 3002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3134,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3008,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3122,
											"end": 3127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3091,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3091,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3091,
											"end": 3128,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3091,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3134,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3280,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3140,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3237,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3274,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3237,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3445,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3286,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3432,
											"end": 3437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3387,
											"end": 3438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3438,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3387,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3701,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3451,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 3562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3689,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3673,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3609,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3694,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3609,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3701,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 4326,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3707,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3851,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3835,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3847,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3936,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3817,
											"end": 3936,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3855,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3936,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3817,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 3976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4025,
											"end": 4034,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4000,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4053,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4000,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3990,
											"end": 4053,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3990,
											"end": 4053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4128,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4173,
											"end": 4180,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4128,
											"end": 4181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4181,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4128,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4181,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4230,
											"end": 4232,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4301,
											"end": 4308,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4281,
											"end": 4290,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4256,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4309,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4201,
											"end": 4319,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 4326,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 4326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 4326,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 4326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 4326,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 4326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4501,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4332,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4494,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4485,
											"end": 4488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4501,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4507,
											"end": 4680,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4507,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4647,
											"end": 4672,
											"name": "PUSH",
											"source": 5,
											"value": "4E4654206E6F74206C697374656420666F722073616C65000000000000000000"
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4673,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4507,
											"end": 4680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4507,
											"end": 4680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4913,
											"end": 4915,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4908,
											"end": 4911,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4849,
											"end": 4916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 5014,
											"end": 5017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4925,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5038,
											"end": 5041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 5052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5477,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5058,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5251,
											"end": 5260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5311,
											"end": 5320,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5305,
											"end": 5309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5339,
											"end": 5470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5470,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5339,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5331,
											"end": 5470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5331,
											"end": 5470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5925,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5483,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5659,
											"end": 5668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5655,
											"end": 5673,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5683,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 5751,
											"end": 5752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5740,
											"end": 5749,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5736,
											"end": 5753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5733,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5683,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5683,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5683,
											"end": 5754,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 5683,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5832,
											"end": 5834,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5814,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5764,
											"end": 5836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5836,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5764,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5846,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 5914,
											"end": 5916,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5903,
											"end": 5912,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 5917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5846,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 5846,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5846,
											"end": 5918,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 5846,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5925,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5925,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 6047,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5931,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6016,
											"end": 6021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 6001,
											"end": 6022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6022,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6001,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 5999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5981,
											"end": 6041,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6037,
											"end": 6038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6035,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6039,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6041,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5981,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 6047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 6047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6190,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 6053,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6138,
											"end": 6144,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6132,
											"end": 6145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6123,
											"end": 6145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6123,
											"end": 6145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6154,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6178,
											"end": 6183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6154,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6154,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6154,
											"end": 6184,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6154,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6190,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6541,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 6196,
											"end": 6541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6300,
											"end": 6309,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6287,
											"end": 6310,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6315,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6280,
											"end": 6399,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6280,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6280,
											"end": 6399,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6318,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6318,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6318,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6318,
											"end": 6397,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6318,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6280,
											"end": 6399,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6280,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6438,
											"end": 6439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6516,
											"end": 6523,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6505,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6514,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 6463,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6524,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6463,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6453,
											"end": 6524,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6453,
											"end": 6524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6409,
											"end": 6534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6541,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6711,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 6547,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "PUSH",
											"source": 5,
											"value": "5061796D656E74206661696C6564000000000000000000000000000000000000"
										},
										{
											"begin": 6683,
											"end": 6684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6664,
											"end": 6704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6859,
											"end": 6862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6944,
											"end": 6946,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 6939,
											"end": 6942,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 6880,
											"end": 6947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 7045,
											"end": 7048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 6956,
											"end": 7049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7049,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6956,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7074,
											"end": 7076,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7069,
											"end": 7072,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6717,
											"end": 7083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7295,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7282,
											"end": 7291,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7342,
											"end": 7351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7328,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7306,
											"end": 7353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 7496,
											"end": 7500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 7370,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7089,
											"end": 7508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7736,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 7514,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7607,
											"end": 7611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7634,
											"end": 7643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7658,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7702,
											"end": 7708,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7658,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 7658,
											"end": 7729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7658,
											"end": 7729,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 7658,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7736,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7885,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7742,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7799,
											"end": 7804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7830,
											"end": 7836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7815,
											"end": 7837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7815,
											"end": 7837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7846,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 7873,
											"end": 7878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7846,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7846,
											"end": 7879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7846,
											"end": 7879,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 7846,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7885,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7885,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7891,
											"end": 8242,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 7891,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 7967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8010,
											"end": 8012,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7998,
											"end": 8007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7981,
											"end": 8013,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8016,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8016,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 8016,
											"end": 8095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8016,
											"end": 8095,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8016,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8217,
											"end": 8224,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8197,
											"end": 8206,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8161,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 8161,
											"end": 8225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8161,
											"end": 8225,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8161,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8151,
											"end": 8225,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8151,
											"end": 8225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8107,
											"end": 8235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7891,
											"end": 8242,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7891,
											"end": 8242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7891,
											"end": 8242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7891,
											"end": 8242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7891,
											"end": 8242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8422,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 8248,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8388,
											"end": 8414,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420746865206F776E6572206F6620746865204E46540000000000000000"
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8372,
											"end": 8386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8415,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8428,
											"end": 8794,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 8428,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8570,
											"end": 8573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 8655,
											"end": 8657,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 8650,
											"end": 8653,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 8591,
											"end": 8658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8658,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 8591,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8584,
											"end": 8658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8584,
											"end": 8658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8667,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8756,
											"end": 8759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8667,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 8667,
											"end": 8760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8667,
											"end": 8760,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8667,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8787,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8780,
											"end": 8783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8776,
											"end": 8788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8769,
											"end": 8788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8769,
											"end": 8788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8428,
											"end": 8794,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8428,
											"end": 8794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8428,
											"end": 8794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8428,
											"end": 8794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8800,
											"end": 9219,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 8800,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8966,
											"end": 8970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8993,
											"end": 9002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9047,
											"end": 9051,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9043,
											"end": 9063,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9039,
											"end": 9040,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9037,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9024,
											"end": 9041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9017,
											"end": 9064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9207,
											"end": 9211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 9081,
											"end": 9212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9212,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9081,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9073,
											"end": 9212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9073,
											"end": 9212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8800,
											"end": 9219,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8800,
											"end": 9219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8800,
											"end": 9219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8800,
											"end": 9219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 9557,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 9225,
											"end": 9557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9346,
											"end": 9350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9386,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9373,
											"end": 9382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9397,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 9465,
											"end": 9466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9454,
											"end": 9463,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9450,
											"end": 9467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9397,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 9397,
											"end": 9468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9397,
											"end": 9468,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 9397,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 9546,
											"end": 9548,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9535,
											"end": 9544,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9531,
											"end": 9549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9522,
											"end": 9528,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 9478,
											"end": 9550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9550,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 9478,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 9557,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 9557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 9557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 9557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 9557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 9557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9563,
											"end": 9734,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9563,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "PUSH",
											"source": 5,
											"value": "436F6E7472616374206E6F7420617070726F7665640000000000000000000000"
										},
										{
											"begin": 9699,
											"end": 9700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9680,
											"end": 9727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9563,
											"end": 9734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9563,
											"end": 9734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9740,
											"end": 10106,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 9740,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9882,
											"end": 9885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9903,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9967,
											"end": 9969,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 9962,
											"end": 9965,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 9903,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9970,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9903,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9896,
											"end": 9970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9896,
											"end": 9970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 10068,
											"end": 10071,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9979,
											"end": 10072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10072,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 9979,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10097,
											"end": 10099,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10092,
											"end": 10095,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10088,
											"end": 10100,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9740,
											"end": 10106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9740,
											"end": 10106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9740,
											"end": 10106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9740,
											"end": 10106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10531,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10112,
											"end": 10531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10278,
											"end": 10282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10318,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10305,
											"end": 10314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10293,
											"end": 10319,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10293,
											"end": 10319,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10365,
											"end": 10374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10355,
											"end": 10375,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10351,
											"end": 10352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10349,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10336,
											"end": 10353,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10329,
											"end": 10376,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10393,
											"end": 10524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 10519,
											"end": 10523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10393,
											"end": 10524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 10393,
											"end": 10524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10393,
											"end": 10524,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 10393,
											"end": 10524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10385,
											"end": 10524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10385,
											"end": 10524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10531,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10718,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 10537,
											"end": 10718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10677,
											"end": 10710,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10673,
											"end": 10674,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10661,
											"end": 10675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 10711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10724,
											"end": 11090,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10724,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10866,
											"end": 10869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 10951,
											"end": 10953,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10946,
											"end": 10949,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 10887,
											"end": 10954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10954,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 10887,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 10954,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 10954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10963,
											"end": 11056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 11052,
											"end": 11055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10963,
											"end": 11056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 10963,
											"end": 11056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10963,
											"end": 11056,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 10963,
											"end": 11056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11083,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11076,
											"end": 11079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11072,
											"end": 11084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10724,
											"end": 11090,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10724,
											"end": 11090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10724,
											"end": 11090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10724,
											"end": 11090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11096,
											"end": 11515,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 11096,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11262,
											"end": 11266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11302,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11285,
											"end": 11303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11277,
											"end": 11303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11277,
											"end": 11303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11343,
											"end": 11347,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11359,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11335,
											"end": 11336,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11324,
											"end": 11333,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11320,
											"end": 11337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11313,
											"end": 11360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11377,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 11503,
											"end": 11507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11377,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 11377,
											"end": 11508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11377,
											"end": 11508,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 11377,
											"end": 11508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11369,
											"end": 11508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11369,
											"end": 11508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11096,
											"end": 11515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11096,
											"end": 11515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11096,
											"end": 11515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11096,
											"end": 11515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"NFTExchange.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyNFT(address,uint256)": "a82ba76f",
							"listNFT(address,uint256,uint256)": "ad05f1b4",
							"listings(address,uint256)": "0007df30",
							"paymentToken()": "3013ce29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"listNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTExchange.sol\":\"NFTExchange\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"NFTExchange.sol\":{\"keccak256\":\"0x6339d6b26dd6fa6c2518dbc6f78566061e8b0188d7b90f9b17a9851989cd8135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b50a7c3cd6a13bc8bc752377c9fed543d92af1409a212590b36ad8d3e4d2699f\",\"dweb:/ipfs/QmZiU3SivdrjTn4snXYSgCEvwRSoJcHdwxsZ49AhMx4dXA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "NFTExchange.sol:NFTExchange",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 296,
								"contract": "NFTExchange.sol:NFTExchange",
								"label": "listings",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)289_storage))"
							},
							{
								"astId": 299,
								"contract": "NFTExchange.sol:NFTExchange",
								"label": "paymentToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)142"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)289_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct NFTExchange.Listing))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(Listing)289_storage)"
							},
							"t_mapping(t_uint256,t_struct(Listing)289_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTExchange.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)289_storage"
							},
							"t_struct(Listing)289_storage": {
								"encoding": "inplace",
								"label": "struct NFTExchange.Listing",
								"members": [
									{
										"astId": 280,
										"contract": "NFTExchange.sol:NFTExchange",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 282,
										"contract": "NFTExchange.sol:NFTExchange",
										"label": "nftContract",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 284,
										"contract": "NFTExchange.sol:NFTExchange",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 286,
										"contract": "NFTExchange.sol:NFTExchange",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 288,
										"contract": "NFTExchange.sol:NFTExchange",
										"label": "isActive",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 142,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 142,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 142,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 142,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 142,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 142,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							271
						],
						"IERC721": [
							259
						]
					},
					"id": 260,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 260,
							"sourceUnit": 272,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 271,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "IERC165",
										"nameLocations": [
											"287:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 271,
										"src": "287:7:2"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 259,
							"linearizedBaseContracts": [
								259,
								271
							],
							"name": "IERC721",
							"nameLocation": "276:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 158,
									"name": "Transfer",
									"nameLocation": "400:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "409:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "451:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:2"
									},
									"src": "394:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 167,
									"name": "Approval",
									"nameLocation": "587:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "596:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "619:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "645:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:2"
									},
									"src": "581:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 176,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "819:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "842:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "868:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:2"
									},
									"src": "798:85:2"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1027:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:2"
									},
									"scope": 259,
									"src": "970:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1203:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:2"
									},
									"scope": 259,
									"src": "1186:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1860:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1874:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1903:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 259,
									"src": "1834:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2701:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:2"
									},
									"scope": 259,
									"src": "2649:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3492:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3506:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:2"
									},
									"scope": 259,
									"src": "3470:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:2"
									},
									"scope": 259,
									"src": "4007:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4415:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4433:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:2"
									},
									"scope": 259,
									"src": "4388:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4628:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4668:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:2"
									},
									"scope": 259,
									"src": "4607:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4876:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4917:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:2"
									},
									"scope": 259,
									"src": "4835:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 260,
							"src": "266:4659:2",
							"usedErrors": [],
							"usedEvents": [
								158,
								167,
								176
							]
						}
					],
					"src": "108:4818:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							271
						]
					},
					"id": 272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 261,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 262,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 271,
							"linearizedBaseContracts": [
								271
							],
							"name": "IERC165",
							"nameLocation": "431:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "817:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 264,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "860:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:3"
									},
									"scope": 271,
									"src": "790:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 272,
							"src": "421:447:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:3"
				},
				"id": 3
			},
			"NFTExchange.sol": {
				"ast": {
					"absolutePath": "NFTExchange.sol",
					"exportedSymbols": {
						"IERC165": [
							271
						],
						"IERC20": [
							142
						],
						"IERC721": [
							259
						],
						"NFTExchange": [
							466
						],
						"ReentrancyGuard": [
							64
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 274,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 467,
							"sourceUnit": 260,
							"src": "58:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 467,
							"sourceUnit": 143,
							"src": "117:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 467,
							"sourceUnit": 65,
							"src": "174:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 277,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"262:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "262:15:4"
									},
									"id": 278,
									"nodeType": "InheritanceSpecifier",
									"src": "262:15:4"
								}
							],
							"canonicalName": "NFTExchange",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 466,
							"linearizedBaseContracts": [
								466,
								64
							],
							"name": "NFTExchange",
							"nameLocation": "247:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "NFTExchange.Listing",
									"id": 289,
									"members": [
										{
											"constant": false,
											"id": 280,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "317:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "309:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 279,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "309:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 282,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "341:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "333:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "333:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 284,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "370:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "362:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "362:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 286,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "392:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "387:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 285,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "387:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 288,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "412:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "407:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 287,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "407:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "291:7:4",
									"nodeType": "StructDefinition",
									"scope": 466,
									"src": "284:143:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0007df30",
									"id": 296,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "488:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 466,
									"src": "433:63:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$289_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct NFTExchange.Listing))"
									},
									"typeName": {
										"id": 295,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 290,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "441:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "433:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$289_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct NFTExchange.Listing))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 294,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 291,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "460:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "452:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$289_storage_$",
												"typeString": "mapping(uint256 => struct NFTExchange.Listing)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 293,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 292,
													"name": "Listing",
													"nameLocations": [
														"471:7:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 289,
													"src": "471:7:4"
												},
												"referencedDeclaration": 289,
												"src": "471:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Listing_$289_storage_ptr",
													"typeString": "struct NFTExchange.Listing"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3013ce29",
									"id": 299,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "516:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 466,
									"src": "502:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 298,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 297,
											"name": "IERC20",
											"nameLocations": [
												"502:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "502:6:4"
										},
										"referencedDeclaration": 142,
										"src": "502:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "beab3a2bb824b124a8a1eb465eec003338d61b414db132d37e9b3a984fdcf010",
									"id": 309,
									"name": "NFTListed",
									"nameLocation": "541:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "576:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "560:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "608:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "592:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "645:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "629:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "668:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "660:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:129:4"
									},
									"src": "535:145:4"
								},
								{
									"anonymous": false,
									"eventSelector": "84a34755616a04d6e547597ec5933d7ca8cf181bb354026be7e93e147edf0ab7",
									"id": 319,
									"name": "NFTPurchased",
									"nameLocation": "692:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "730:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "714:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "761:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "745:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "795:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "782:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "782:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "817:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "812:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:124:4"
									},
									"src": "686:143:4"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "870:53:4",
										"statements": [
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "880:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 326,
																"name": "_paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "902:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 325,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "895:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "895:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "880:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "880:36:4"
											}
										]
									},
									"id": 331,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "855:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "847:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:23:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "870:0:4"
									},
									"scope": 466,
									"src": "835:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1011:467:4",
										"statements": [
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "1029:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "1021:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$259",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 341,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 340,
																"name": "IERC721",
																"nameLocations": [
																	"1021:7:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 259,
																"src": "1021:7:4"
															},
															"referencedDeclaration": 259,
															"src": "1021:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$259",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [
														{
															"id": 344,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "1043:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 343,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1035:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$259_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1035:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$259",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1021:35:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 350,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "1086:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 348,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "1074:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$259",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1078:7:4",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1074:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1074:21:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 352,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1099:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1103:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1099:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1074:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572206f6620746865204e4654",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1111:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42",
																"typeString": "literal_string \"Not the owner of the NFT\""
															},
															"value": "Not the owner of the NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade2448a60a34429acfc8fcea1668506ff7f4171866685453ecade830d1bed42",
																"typeString": "literal_string \"Not the owner of the NFT\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1066:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "1066:72:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 361,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1177:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1177:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 365,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1197:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_NFTExchange_$466",
																				"typeString": "contract NFTExchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_NFTExchange_$466",
																				"typeString": "contract NFTExchange"
																			}
																		],
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1189:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 363,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1189:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1189:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 359,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "1156:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$259",
																		"typeString": "contract IERC721"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1160:16:4",
																"memberName": "isApprovedForAll",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 258,
																"src": "1156:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view external returns (bool)"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1156:47:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1205:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1148:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "1148:81:4"
											},
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 371,
																"name": "listings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "1240:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$289_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct NFTExchange.Listing storage ref))"
																}
															},
															"id": 374,
															"indexExpression": {
																"id": 372,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1249:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1240:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$289_storage_$",
																"typeString": "mapping(uint256 => struct NFTExchange.Listing storage ref)"
															}
														},
														"id": 375,
														"indexExpression": {
															"id": 373,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1263:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1240:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$289_storage",
															"typeString": "struct NFTExchange.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 377,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1296:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1300:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1296:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 379,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1320:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 380,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "1346:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 381,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "1368:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1388:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 376,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "1275:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$289_storage_ptr_$",
																"typeString": "type(struct NFTExchange.Listing storage pointer)"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1275:127:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$289_memory_ptr",
															"typeString": "struct NFTExchange.Listing memory"
														}
													},
													"src": "1240:162:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$289_storage",
														"typeString": "struct NFTExchange.Listing storage ref"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1240:162:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 387,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1428:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1432:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1428:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "1440:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1454:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 391,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1464:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "NFTListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "1418:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "EmitStatement",
												"src": "1413:58:4"
											}
										]
									},
									"functionSelector": "ad05f1b4",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "listNFT",
									"nameLocation": "938:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "954:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "946:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "976:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "968:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "994:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "986:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:56:4"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:4"
									},
									"scope": 466,
									"src": "929:549:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "1562:506:4",
										"statements": [
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "1588:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "1572:23:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$289_storage_ptr",
															"typeString": "struct NFTExchange.Listing"
														},
														"typeName": {
															"id": 405,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 404,
																"name": "Listing",
																"nameLocations": [
																	"1572:7:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 289,
																"src": "1572:7:4"
															},
															"referencedDeclaration": 289,
															"src": "1572:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$289_storage_ptr",
																"typeString": "struct NFTExchange.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 407,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "1598:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$289_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct NFTExchange.Listing storage ref))"
															}
														},
														"id": 409,
														"indexExpression": {
															"id": 408,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "1607:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1598:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$289_storage_$",
															"typeString": "mapping(uint256 => struct NFTExchange.Listing storage ref)"
														}
													},
													"id": 411,
													"indexExpression": {
														"id": 410,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1621:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1598:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$289_storage",
														"typeString": "struct NFTExchange.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1572:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 414,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "1648:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$289_storage_ptr",
																	"typeString": "struct NFTExchange.Listing storage pointer"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1656:8:4",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 288,
															"src": "1648:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654206e6f74206c697374656420666f722073616c65",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1666:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76",
																"typeString": "literal_string \"NFT not listed for sale\""
															},
															"value": "NFT not listed for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96b48db638dad44c52beef8558ea8b7a2a03cc9cc408f774d284eef54cbdbb76",
																"typeString": "literal_string \"NFT not listed for sale\""
															}
														],
														"id": 413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1640:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1640:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "1640:52:4"
											},
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "1711:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "1703:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$259",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 420,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 419,
																"name": "IERC721",
																"nameLocations": [
																	"1703:7:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 259,
																"src": "1703:7:4"
															},
															"referencedDeclaration": 259,
															"src": "1703:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$259",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [
														{
															"id": 423,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "1725:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1717:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$259_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$259",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1703:35:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 429,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1796:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1800:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1796:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 431,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "1808:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$289_storage_ptr",
																			"typeString": "struct NFTExchange.Listing storage pointer"
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1816:6:4",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 280,
																	"src": "1808:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 433,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "1824:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$289_storage_ptr",
																			"typeString": "struct NFTExchange.Listing storage pointer"
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1832:5:4",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 286,
																	"src": "1824:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 427,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "1770:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1783:12:4",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 141,
																"src": "1770:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1770:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061796d656e74206661696c6564",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1852:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
																"typeString": "literal_string \"Payment failed\""
															},
															"value": "Payment failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
																"typeString": "literal_string \"Payment failed\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1749:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "1749:129:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 442,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "1910:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$289_storage_ptr",
																	"typeString": "struct NFTExchange.Listing storage pointer"
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1918:6:4",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 280,
															"src": "1910:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 444,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1926:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1930:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1926:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "1938:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 439,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "1889:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$259",
																"typeString": "contract IERC721"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1893:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "1889:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1889:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "1889:58:4"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 449,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1958:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$289_storage_ptr",
																"typeString": "struct NFTExchange.Listing storage pointer"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1966:8:4",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 288,
														"src": "1958:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1977:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1958:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "1958:24:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 456,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2011:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2015:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2011:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "2023:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 459,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "2037:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 460,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "2047:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$289_storage_ptr",
																	"typeString": "struct NFTExchange.Listing storage pointer"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2055:5:4",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 286,
															"src": "2047:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "NFTPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1998:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "1993:68:4"
											}
										]
									},
									"functionSelector": "a82ba76f",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 402,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 401,
												"name": "nonReentrant",
												"nameLocations": [
													"1549:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "1549:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1549:12:4"
										}
									],
									"name": "buyNFT",
									"nameLocation": "1493:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "1508:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1500:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1530:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1522:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:40:4"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1562:0:4"
									},
									"scope": 466,
									"src": "1484:584:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 467,
							"src": "238:1832:4",
							"usedErrors": [],
							"usedEvents": [
								309,
								319
							]
						}
					],
					"src": "32:2038:4"
				},
				"id": 4
			}
		}
	}
}